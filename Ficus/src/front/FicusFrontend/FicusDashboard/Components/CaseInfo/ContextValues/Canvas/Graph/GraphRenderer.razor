@using Ficus
@using FicusDashboard.Layout.Models
@using Radzen.Blazor
@inject IJSRuntime Js


<div style="display: flex; flex-direction: row; width: 100%; height: 100%;">
  <div style="display: flex; flex-direction: column;">
    @foreach (var kind in Enum.GetValues<SoftwareGraphEnhancementKind>())
    {
      <div style="display: flex; flex-direction: row; align-items: center;">
        <RadzenCheckBox TValue="bool" ValueChanged="@(v => HandleSelectionChange(v, kind))"/>
        <div>@kind.ToString()</div>
      </div>
    }
  </div>

  <CanvasComponent @ref="myCanvasComponent" IsFullScreen="@IsFullScreen" RenderingFunc="RenderCanvas"
                   FileNameCreator="CreateExportFileName"/>
</div>

@code
{
  private enum SoftwareGraphEnhancementKind
  {
    Allocations,
    Exceptions,
    MethodsLoadUnload,
    MethodsInlinings,
    ArrayPools,
    Http,
    Sockets,
    Threads
  }

  [Parameter] public required bool IsFullScreen { get; init; }
  [Parameter] public required GrpcGraph Graph { get; init; }
  [Parameter] public required ProcessCaseData ProcessCaseData { get; init; }
  [Parameter] public GrpcAnnotation? Annotation { get; set; }


  private CanvasComponent? myCanvasComponent;
  private HashSet<SoftwareGraphEnhancementKind> mySelectedEnhancements = [];


  private async Task<IJSObjectReference> RenderCanvas(string canvasId)
  {
    var enhancements = mySelectedEnhancements.Select(e => e.ToString()).OrderDescending().ToList();
    return await Js.InvokeAsync<IJSObjectReference>("drawGraph", canvasId, Graph, Annotation, enhancements);
  }

  private string CreateExportFileName()
  {
    return ProcessCaseData.ProcessData.ProcessName + "_" + ProcessCaseData.Case.DisplayName + "_graph";
  }

  private void HandleSelectionChange(bool selected, SoftwareGraphEnhancementKind enhancement)
  {
    if (selected)
    {
      mySelectedEnhancements.Add(enhancement);
    }
    else
    {
      mySelectedEnhancements.Remove(enhancement);
    }

    StateHasChanged();
    myCanvasComponent?.ReRenderCanvas();
  }
}