@using Ficus
@using Radzen
@using Radzen.Blazor

<div style="display: flex; flex-direction: column; 
            background: var(--aggregated-data-background); border-radius: 5px; padding: 5px;">
  @if (Enhancements is { Count: > 0 })
  {
    <EnhancementsSettings @ref="myEnhancementsSettings" Enhancements="Enhancements"/>

    <div style="margin-top: 5px;">Filter:</div>
    <input type="text" @bind="Filter" style="width: 90%"/>
  }

  @{
    var margin = Enhancements is { Count: > 0 } ? 5 : 0;
  }

  <div style="margin-top: @(margin)px;">Spacing factor:</div>
  <input type="text" @bind="SpacingFactor" style="width: 90%"/>

  <BoolCheckbox HandleValueUpdate="@(newValue => UseEventClassesAsLabels = newValue)"
                Title="Event Classes as Name"/>

  @if (Kind is GrpcGraphKind.DagLcs)
  {
    <BoolCheckbox HandleValueUpdate="@(newValue => RenderDagLcsInFlamegraphMode = newValue)"
                  Title="Render DAG LCS in flamegraph mode"/>
  }

  <RadzenStack Orientation="Orientation.Horizontal"
               AlignItems="AlignItems.Center"
               Gap="0.5rem"
               Style="margin-top: 5px;">
    <RadzenLabel Text="TB"/>
    <RadzenSwitch Name="Orientation" @bind-Value="@UseLROrientation"/>
    <RadzenLabel Text="LR"/>
  </RadzenStack>

  @ChildContent
</div>

@code {
  [Parameter] public required List<EnhancementsSettings.EnhancementName>? Enhancements { get; init; }
  [Parameter] public required GrpcGraphKind Kind { get; init; }
  [Parameter] public RenderFragment? ChildContent { get; init; }

  private EnhancementsSettings? myEnhancementsSettings;

  public bool RenderDagLcsInFlamegraphMode { get; private set; }
  public string? Filter { get; private set; }
  public bool UseLROrientation { get; private set; } = true;
  public string SpacingFactor { get; private set; } = "1.4";
  public bool UseEventClassesAsLabels { get; private set; }

  public List<string> SelectedEnhancements => myEnhancementsSettings?.SelectedEnhancements ?? [];
}