# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!

"""Client and server classes corresponding to protobuf-defined services."""

import grpc



import ficus.grpc_pipelines.models.backend_service_pb2 as backend__service__pb2

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

import ficus.grpc_pipelines.models.util_pb2 as util__pb2





class GrpcBackendServiceStub(object):

    """Missing associated documentation comment in .proto file."""



    def __init__(self, channel):

        """Constructor.



        Args:

            channel: A grpc.Channel.

        """

        self.ExecutePipeline = channel.unary_stream(

                '/ficus.GrpcBackendService/ExecutePipeline',

                request_serializer=backend__service__pb2.GrpcProxyPipelineExecutionRequest.SerializeToString,

                response_deserializer=backend__service__pb2.GrpcPipelinePartExecutionResult.FromString,

                )

        self.GetContextValue = channel.unary_unary(

                '/ficus.GrpcBackendService/GetContextValue',

                request_serializer=backend__service__pb2.GrpcGetContextValueRequest.SerializeToString,

                response_deserializer=util__pb2.GrpcGuid.FromString,

                )

        self.GetAllContextValues = channel.unary_unary(

                '/ficus.GrpcBackendService/GetAllContextValues',

                request_serializer=util__pb2.GrpcGuid.SerializeToString,

                response_deserializer=backend__service__pb2.GrpcGetAllContextValuesResult.FromString,

                )

        self.DropExecutionResult = channel.unary_unary(

                '/ficus.GrpcBackendService/DropExecutionResult',

                request_serializer=util__pb2.GrpcGuid.SerializeToString,

                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,

                )

        self.GetBackendInfo = channel.unary_unary(

                '/ficus.GrpcBackendService/GetBackendInfo',

                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,

                response_deserializer=backend__service__pb2.GrpcFicusBackendInfo.FromString,

                )





class GrpcBackendServiceServicer(object):

    """Missing associated documentation comment in .proto file."""



    def ExecutePipeline(self, request, context):

        """Missing associated documentation comment in .proto file."""

        context.set_code(grpc.StatusCode.UNIMPLEMENTED)

        context.set_details('Method not implemented!')

        raise NotImplementedError('Method not implemented!')



    def GetContextValue(self, request, context):

        """Missing associated documentation comment in .proto file."""

        context.set_code(grpc.StatusCode.UNIMPLEMENTED)

        context.set_details('Method not implemented!')

        raise NotImplementedError('Method not implemented!')



    def GetAllContextValues(self, request, context):

        """Missing associated documentation comment in .proto file."""

        context.set_code(grpc.StatusCode.UNIMPLEMENTED)

        context.set_details('Method not implemented!')

        raise NotImplementedError('Method not implemented!')



    def DropExecutionResult(self, request, context):

        """Missing associated documentation comment in .proto file."""

        context.set_code(grpc.StatusCode.UNIMPLEMENTED)

        context.set_details('Method not implemented!')

        raise NotImplementedError('Method not implemented!')



    def GetBackendInfo(self, request, context):

        """Missing associated documentation comment in .proto file."""

        context.set_code(grpc.StatusCode.UNIMPLEMENTED)

        context.set_details('Method not implemented!')

        raise NotImplementedError('Method not implemented!')





def add_GrpcBackendServiceServicer_to_server(servicer, server):

    rpc_method_handlers = {

            'ExecutePipeline': grpc.unary_stream_rpc_method_handler(

                    servicer.ExecutePipeline,

                    request_deserializer=backend__service__pb2.GrpcProxyPipelineExecutionRequest.FromString,

                    response_serializer=backend__service__pb2.GrpcPipelinePartExecutionResult.SerializeToString,

            ),

            'GetContextValue': grpc.unary_unary_rpc_method_handler(

                    servicer.GetContextValue,

                    request_deserializer=backend__service__pb2.GrpcGetContextValueRequest.FromString,

                    response_serializer=util__pb2.GrpcGuid.SerializeToString,

            ),

            'GetAllContextValues': grpc.unary_unary_rpc_method_handler(

                    servicer.GetAllContextValues,

                    request_deserializer=util__pb2.GrpcGuid.FromString,

                    response_serializer=backend__service__pb2.GrpcGetAllContextValuesResult.SerializeToString,

            ),

            'DropExecutionResult': grpc.unary_unary_rpc_method_handler(

                    servicer.DropExecutionResult,

                    request_deserializer=util__pb2.GrpcGuid.FromString,

                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,

            ),

            'GetBackendInfo': grpc.unary_unary_rpc_method_handler(

                    servicer.GetBackendInfo,

                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,

                    response_serializer=backend__service__pb2.GrpcFicusBackendInfo.SerializeToString,

            ),

    }

    generic_handler = grpc.method_handlers_generic_handler(

            'ficus.GrpcBackendService', rpc_method_handlers)

    server.add_generic_rpc_handlers((generic_handler,))





 # This class is part of an EXPERIMENTAL API.

class GrpcBackendService(object):

    """Missing associated documentation comment in .proto file."""



    @staticmethod

    def ExecutePipeline(request,

            target,

            options=(),

            channel_credentials=None,

            call_credentials=None,

            insecure=False,

            compression=None,

            wait_for_ready=None,

            timeout=None,

            metadata=None):

        return grpc.experimental.unary_stream(request, target, '/ficus.GrpcBackendService/ExecutePipeline',

            backend__service__pb2.GrpcProxyPipelineExecutionRequest.SerializeToString,

            backend__service__pb2.GrpcPipelinePartExecutionResult.FromString,

            options, channel_credentials,

            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)



    @staticmethod

    def GetContextValue(request,

            target,

            options=(),

            channel_credentials=None,

            call_credentials=None,

            insecure=False,

            compression=None,

            wait_for_ready=None,

            timeout=None,

            metadata=None):

        return grpc.experimental.unary_unary(request, target, '/ficus.GrpcBackendService/GetContextValue',

            backend__service__pb2.GrpcGetContextValueRequest.SerializeToString,

            util__pb2.GrpcGuid.FromString,

            options, channel_credentials,

            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)



    @staticmethod

    def GetAllContextValues(request,

            target,

            options=(),

            channel_credentials=None,

            call_credentials=None,

            insecure=False,

            compression=None,

            wait_for_ready=None,

            timeout=None,

            metadata=None):

        return grpc.experimental.unary_unary(request, target, '/ficus.GrpcBackendService/GetAllContextValues',

            util__pb2.GrpcGuid.SerializeToString,

            backend__service__pb2.GrpcGetAllContextValuesResult.FromString,

            options, channel_credentials,

            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)



    @staticmethod

    def DropExecutionResult(request,

            target,

            options=(),

            channel_credentials=None,

            call_credentials=None,

            insecure=False,

            compression=None,

            wait_for_ready=None,

            timeout=None,

            metadata=None):

        return grpc.experimental.unary_unary(request, target, '/ficus.GrpcBackendService/DropExecutionResult',

            util__pb2.GrpcGuid.SerializeToString,

            google_dot_protobuf_dot_empty__pb2.Empty.FromString,

            options, channel_credentials,

            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)



    @staticmethod

    def GetBackendInfo(request,

            target,

            options=(),

            channel_credentials=None,

            call_credentials=None,

            insecure=False,

            compression=None,

            wait_for_ready=None,

            timeout=None,

            metadata=None):

        return grpc.experimental.unary_unary(request, target, '/ficus.GrpcBackendService/GetBackendInfo',

            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,

            backend__service__pb2.GrpcFicusBackendInfo.FromString,

            options, channel_credentials,

            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
