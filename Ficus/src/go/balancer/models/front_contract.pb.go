// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.28.3
// source: front_contract.proto

package grpc_models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GrpcSubscriptionAndPipelinesStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cases []*GrpcProcessCaseMetadataWithStamp `protobuf:"bytes,1,rep,name=cases,proto3" json:"cases,omitempty"`
}

func (x *GrpcSubscriptionAndPipelinesStateResponse) Reset() {
	*x = GrpcSubscriptionAndPipelinesStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_front_contract_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcSubscriptionAndPipelinesStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcSubscriptionAndPipelinesStateResponse) ProtoMessage() {}

func (x *GrpcSubscriptionAndPipelinesStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_front_contract_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcSubscriptionAndPipelinesStateResponse.ProtoReflect.Descriptor instead.
func (*GrpcSubscriptionAndPipelinesStateResponse) Descriptor() ([]byte, []int) {
	return file_front_contract_proto_rawDescGZIP(), []int{0}
}

func (x *GrpcSubscriptionAndPipelinesStateResponse) GetCases() []*GrpcProcessCaseMetadataWithStamp {
	if x != nil {
		return x.Cases
	}
	return nil
}

type GrpcProcessCaseMetadataWithStamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stamp    uint64                   `protobuf:"varint,1,opt,name=stamp,proto3" json:"stamp,omitempty"`
	Metadata *GrpcProcessCaseMetadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GrpcProcessCaseMetadataWithStamp) Reset() {
	*x = GrpcProcessCaseMetadataWithStamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_front_contract_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcProcessCaseMetadataWithStamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcProcessCaseMetadataWithStamp) ProtoMessage() {}

func (x *GrpcProcessCaseMetadataWithStamp) ProtoReflect() protoreflect.Message {
	mi := &file_front_contract_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcProcessCaseMetadataWithStamp.ProtoReflect.Descriptor instead.
func (*GrpcProcessCaseMetadataWithStamp) Descriptor() ([]byte, []int) {
	return file_front_contract_proto_rawDescGZIP(), []int{1}
}

func (x *GrpcProcessCaseMetadataWithStamp) GetStamp() uint64 {
	if x != nil {
		return x.Stamp
	}
	return 0
}

func (x *GrpcProcessCaseMetadataWithStamp) GetMetadata() *GrpcProcessCaseMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GrpcGetPipelineCaseContextValuesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionId *GrpcGuid     `protobuf:"bytes,1,opt,name=subscriptionId,proto3" json:"subscriptionId,omitempty"`
	PipelineId     *GrpcGuid     `protobuf:"bytes,2,opt,name=pipelineId,proto3" json:"pipelineId,omitempty"`
	ProcessName    string        `protobuf:"bytes,3,opt,name=processName,proto3" json:"processName,omitempty"`
	CaseName       *GrpcCaseName `protobuf:"bytes,4,opt,name=caseName,proto3" json:"caseName,omitempty"`
}

func (x *GrpcGetPipelineCaseContextValuesRequest) Reset() {
	*x = GrpcGetPipelineCaseContextValuesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_front_contract_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcGetPipelineCaseContextValuesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcGetPipelineCaseContextValuesRequest) ProtoMessage() {}

func (x *GrpcGetPipelineCaseContextValuesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_front_contract_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcGetPipelineCaseContextValuesRequest.ProtoReflect.Descriptor instead.
func (*GrpcGetPipelineCaseContextValuesRequest) Descriptor() ([]byte, []int) {
	return file_front_contract_proto_rawDescGZIP(), []int{2}
}

func (x *GrpcGetPipelineCaseContextValuesRequest) GetSubscriptionId() *GrpcGuid {
	if x != nil {
		return x.SubscriptionId
	}
	return nil
}

func (x *GrpcGetPipelineCaseContextValuesRequest) GetPipelineId() *GrpcGuid {
	if x != nil {
		return x.PipelineId
	}
	return nil
}

func (x *GrpcGetPipelineCaseContextValuesRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *GrpcGetPipelineCaseContextValuesRequest) GetCaseName() *GrpcCaseName {
	if x != nil {
		return x.CaseName
	}
	return nil
}

type GrpcKafkaUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessCaseMetadata *GrpcProcessCaseMetadata       `protobuf:"bytes,1,opt,name=processCaseMetadata,proto3" json:"processCaseMetadata,omitempty"`
	PipelinePartInfo    *GrpcPipelinePartInfo          `protobuf:"bytes,2,opt,name=pipelinePartInfo,proto3" json:"pipelinePartInfo,omitempty"`
	ContextValues       []*GrpcContextValueWithKeyName `protobuf:"bytes,3,rep,name=contextValues,proto3" json:"contextValues,omitempty"`
}

func (x *GrpcKafkaUpdate) Reset() {
	*x = GrpcKafkaUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_front_contract_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcKafkaUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcKafkaUpdate) ProtoMessage() {}

func (x *GrpcKafkaUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_front_contract_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcKafkaUpdate.ProtoReflect.Descriptor instead.
func (*GrpcKafkaUpdate) Descriptor() ([]byte, []int) {
	return file_front_contract_proto_rawDescGZIP(), []int{3}
}

func (x *GrpcKafkaUpdate) GetProcessCaseMetadata() *GrpcProcessCaseMetadata {
	if x != nil {
		return x.ProcessCaseMetadata
	}
	return nil
}

func (x *GrpcKafkaUpdate) GetPipelinePartInfo() *GrpcPipelinePartInfo {
	if x != nil {
		return x.PipelinePartInfo
	}
	return nil
}

func (x *GrpcKafkaUpdate) GetContextValues() []*GrpcContextValueWithKeyName {
	if x != nil {
		return x.ContextValues
	}
	return nil
}

type GrpcProcessCaseMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProcessName      string                `protobuf:"bytes,1,opt,name=processName,proto3" json:"processName,omitempty"`
	CaseName         *GrpcCaseName         `protobuf:"bytes,2,opt,name=caseName,proto3" json:"caseName,omitempty"`
	SubscriptionId   *GrpcGuid             `protobuf:"bytes,3,opt,name=subscriptionId,proto3" json:"subscriptionId,omitempty"`
	SubscriptionName string                `protobuf:"bytes,4,opt,name=subscriptionName,proto3" json:"subscriptionName,omitempty"`
	PipelineId       *GrpcGuid             `protobuf:"bytes,5,opt,name=pipelineId,proto3" json:"pipelineId,omitempty"`
	PipelineName     string                `protobuf:"bytes,6,opt,name=pipelineName,proto3" json:"pipelineName,omitempty"`
	Metadata         []*GrpcStringKeyValue `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *GrpcProcessCaseMetadata) Reset() {
	*x = GrpcProcessCaseMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_front_contract_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcProcessCaseMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcProcessCaseMetadata) ProtoMessage() {}

func (x *GrpcProcessCaseMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_front_contract_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcProcessCaseMetadata.ProtoReflect.Descriptor instead.
func (*GrpcProcessCaseMetadata) Descriptor() ([]byte, []int) {
	return file_front_contract_proto_rawDescGZIP(), []int{4}
}

func (x *GrpcProcessCaseMetadata) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *GrpcProcessCaseMetadata) GetCaseName() *GrpcCaseName {
	if x != nil {
		return x.CaseName
	}
	return nil
}

func (x *GrpcProcessCaseMetadata) GetSubscriptionId() *GrpcGuid {
	if x != nil {
		return x.SubscriptionId
	}
	return nil
}

func (x *GrpcProcessCaseMetadata) GetSubscriptionName() string {
	if x != nil {
		return x.SubscriptionName
	}
	return ""
}

func (x *GrpcProcessCaseMetadata) GetPipelineId() *GrpcGuid {
	if x != nil {
		return x.PipelineId
	}
	return nil
}

func (x *GrpcProcessCaseMetadata) GetPipelineName() string {
	if x != nil {
		return x.PipelineName
	}
	return ""
}

func (x *GrpcProcessCaseMetadata) GetMetadata() []*GrpcStringKeyValue {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type GrpcCaseName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName   string   `protobuf:"bytes,1,opt,name=displayName,proto3" json:"displayName,omitempty"`
	FullNameParts []string `protobuf:"bytes,2,rep,name=fullNameParts,proto3" json:"fullNameParts,omitempty"`
}

func (x *GrpcCaseName) Reset() {
	*x = GrpcCaseName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_front_contract_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcCaseName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcCaseName) ProtoMessage() {}

func (x *GrpcCaseName) ProtoReflect() protoreflect.Message {
	mi := &file_front_contract_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcCaseName.ProtoReflect.Descriptor instead.
func (*GrpcCaseName) Descriptor() ([]byte, []int) {
	return file_front_contract_proto_rawDescGZIP(), []int{5}
}

func (x *GrpcCaseName) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *GrpcCaseName) GetFullNameParts() []string {
	if x != nil {
		return x.FullNameParts
	}
	return nil
}

type GrpcCaseContextValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextValues []*GrpcPipelinePartContextValues `protobuf:"bytes,1,rep,name=contextValues,proto3" json:"contextValues,omitempty"`
	Stamp         uint64                           `protobuf:"varint,2,opt,name=stamp,proto3" json:"stamp,omitempty"`
}

func (x *GrpcCaseContextValues) Reset() {
	*x = GrpcCaseContextValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_front_contract_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcCaseContextValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcCaseContextValues) ProtoMessage() {}

func (x *GrpcCaseContextValues) ProtoReflect() protoreflect.Message {
	mi := &file_front_contract_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcCaseContextValues.ProtoReflect.Descriptor instead.
func (*GrpcCaseContextValues) Descriptor() ([]byte, []int) {
	return file_front_contract_proto_rawDescGZIP(), []int{6}
}

func (x *GrpcCaseContextValues) GetContextValues() []*GrpcPipelinePartContextValues {
	if x != nil {
		return x.ContextValues
	}
	return nil
}

func (x *GrpcCaseContextValues) GetStamp() uint64 {
	if x != nil {
		return x.Stamp
	}
	return 0
}

type GrpcPipelinePartContextValues struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelinePartInfo *GrpcPipelinePartInfo                  `protobuf:"bytes,1,opt,name=pipelinePartInfo,proto3" json:"pipelinePartInfo,omitempty"`
	Stamp            *timestamppb.Timestamp                 `protobuf:"bytes,2,opt,name=stamp,proto3" json:"stamp,omitempty"`
	ExecutionResults []*GrpcCasePipelinePartExecutionResult `protobuf:"bytes,3,rep,name=execution_results,json=executionResults,proto3" json:"execution_results,omitempty"`
}

func (x *GrpcPipelinePartContextValues) Reset() {
	*x = GrpcPipelinePartContextValues{}
	if protoimpl.UnsafeEnabled {
		mi := &file_front_contract_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcPipelinePartContextValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcPipelinePartContextValues) ProtoMessage() {}

func (x *GrpcPipelinePartContextValues) ProtoReflect() protoreflect.Message {
	mi := &file_front_contract_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcPipelinePartContextValues.ProtoReflect.Descriptor instead.
func (*GrpcPipelinePartContextValues) Descriptor() ([]byte, []int) {
	return file_front_contract_proto_rawDescGZIP(), []int{7}
}

func (x *GrpcPipelinePartContextValues) GetPipelinePartInfo() *GrpcPipelinePartInfo {
	if x != nil {
		return x.PipelinePartInfo
	}
	return nil
}

func (x *GrpcPipelinePartContextValues) GetStamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Stamp
	}
	return nil
}

func (x *GrpcPipelinePartContextValues) GetExecutionResults() []*GrpcCasePipelinePartExecutionResult {
	if x != nil {
		return x.ExecutionResults
	}
	return nil
}

type GrpcCasePipelinePartExecutionResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContextValues []*GrpcContextValueWithKeyName `protobuf:"bytes,3,rep,name=contextValues,proto3" json:"contextValues,omitempty"`
}

func (x *GrpcCasePipelinePartExecutionResult) Reset() {
	*x = GrpcCasePipelinePartExecutionResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_front_contract_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcCasePipelinePartExecutionResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcCasePipelinePartExecutionResult) ProtoMessage() {}

func (x *GrpcCasePipelinePartExecutionResult) ProtoReflect() protoreflect.Message {
	mi := &file_front_contract_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcCasePipelinePartExecutionResult.ProtoReflect.Descriptor instead.
func (*GrpcCasePipelinePartExecutionResult) Descriptor() ([]byte, []int) {
	return file_front_contract_proto_rawDescGZIP(), []int{8}
}

func (x *GrpcCasePipelinePartExecutionResult) GetContextValues() []*GrpcContextValueWithKeyName {
	if x != nil {
		return x.ContextValues
	}
	return nil
}

type GrpcPipelinePartInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id          *GrpcGuid `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ExecutionId *GrpcGuid `protobuf:"bytes,3,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
}

func (x *GrpcPipelinePartInfo) Reset() {
	*x = GrpcPipelinePartInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_front_contract_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcPipelinePartInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcPipelinePartInfo) ProtoMessage() {}

func (x *GrpcPipelinePartInfo) ProtoReflect() protoreflect.Message {
	mi := &file_front_contract_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcPipelinePartInfo.ProtoReflect.Descriptor instead.
func (*GrpcPipelinePartInfo) Descriptor() ([]byte, []int) {
	return file_front_contract_proto_rawDescGZIP(), []int{9}
}

func (x *GrpcPipelinePartInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GrpcPipelinePartInfo) GetId() *GrpcGuid {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *GrpcPipelinePartInfo) GetExecutionId() *GrpcGuid {
	if x != nil {
		return x.ExecutionId
	}
	return nil
}

var File_front_contract_proto protoreflect.FileDescriptor

var file_front_contract_proto_rawDesc = []byte{
	0x0a, 0x14, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x66, 0x69, 0x63, 0x75, 0x73, 0x1a, 0x1b, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x74, 0x69, 0x6c,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x29, 0x47, 0x72, 0x70, 0x63, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x50, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3d, 0x0a, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x57, 0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x63, 0x61, 0x73, 0x65, 0x73,
	0x22, 0x74, 0x0a, 0x20, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x57, 0x69, 0x74, 0x68, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3a, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66,
	0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73,
	0x43, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe6, 0x01, 0x0a, 0x27, 0x47, 0x72, 0x70, 0x63, 0x47,
	0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x63,
	0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x70,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x75, 0x69, 0x64,
	0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f,
	0x0a, 0x08, 0x63, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x61, 0x73,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x63, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0xf6, 0x01, 0x0a, 0x0f, 0x47, 0x72, 0x70, 0x63, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x61,
	0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x43, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x13, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x10, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x48,
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72,
	0x70, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0xdd, 0x02, 0x0a, 0x17, 0x47, 0x72, 0x70,
	0x63, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x43, 0x61, 0x73, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x63, 0x65,
	0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x61, 0x73, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x63,
	0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x75, 0x69, 0x64,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0a,
	0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x75, 0x69,
	0x64, 0x52, 0x0a, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x0c, 0x47, 0x72, 0x70, 0x63,
	0x43, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73,
	0x22, 0x79, 0x0a, 0x15, 0x47, 0x72, 0x70, 0x63, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x4a, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xf3, 0x01, 0x0a, 0x1d,
	0x47, 0x72, 0x70, 0x63, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x47, 0x0a,
	0x10, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e,
	0x47, 0x72, 0x70, 0x63, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x57, 0x0a, 0x11, 0x65, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63,
	0x43, 0x61, 0x73, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x10, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x22, 0x6f, 0x0a, 0x23, 0x47, 0x72, 0x70, 0x63, 0x43, 0x61, 0x73, 0x65, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x48, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x22, 0x7f, 0x0a, 0x14, 0x47, 0x72, 0x70, 0x63, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x63,
	0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x75, 0x69, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x32, 0x0a, 0x0c, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72,
	0x70, 0x63, 0x47, 0x75, 0x69, 0x64, 0x52, 0x0b, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x32, 0x82, 0x02, 0x0a, 0x25, 0x47, 0x72, 0x70, 0x63, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6c, 0x0a,
	0x20, 0x47, 0x65, 0x74, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x6e, 0x64, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x30, 0x2e, 0x66, 0x69, 0x63, 0x75,
	0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6e, 0x64, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b, 0x0a, 0x1b, 0x47,
	0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x2e, 0x66, 0x69, 0x63,
	0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x65, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x69, 0x63,
	0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x42, 0x0d, 0x5a, 0x0b, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_front_contract_proto_rawDescOnce sync.Once
	file_front_contract_proto_rawDescData = file_front_contract_proto_rawDesc
)

func file_front_contract_proto_rawDescGZIP() []byte {
	file_front_contract_proto_rawDescOnce.Do(func() {
		file_front_contract_proto_rawDescData = protoimpl.X.CompressGZIP(file_front_contract_proto_rawDescData)
	})
	return file_front_contract_proto_rawDescData
}

var file_front_contract_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_front_contract_proto_goTypes = []interface{}{
	(*GrpcSubscriptionAndPipelinesStateResponse)(nil), // 0: ficus.GrpcSubscriptionAndPipelinesStateResponse
	(*GrpcProcessCaseMetadataWithStamp)(nil),          // 1: ficus.GrpcProcessCaseMetadataWithStamp
	(*GrpcGetPipelineCaseContextValuesRequest)(nil),   // 2: ficus.GrpcGetPipelineCaseContextValuesRequest
	(*GrpcKafkaUpdate)(nil),                           // 3: ficus.GrpcKafkaUpdate
	(*GrpcProcessCaseMetadata)(nil),                   // 4: ficus.GrpcProcessCaseMetadata
	(*GrpcCaseName)(nil),                              // 5: ficus.GrpcCaseName
	(*GrpcCaseContextValues)(nil),                     // 6: ficus.GrpcCaseContextValues
	(*GrpcPipelinePartContextValues)(nil),             // 7: ficus.GrpcPipelinePartContextValues
	(*GrpcCasePipelinePartExecutionResult)(nil),       // 8: ficus.GrpcCasePipelinePartExecutionResult
	(*GrpcPipelinePartInfo)(nil),                      // 9: ficus.GrpcPipelinePartInfo
	(*GrpcGuid)(nil),                                  // 10: ficus.GrpcGuid
	(*GrpcContextValueWithKeyName)(nil),               // 11: ficus.GrpcContextValueWithKeyName
	(*GrpcStringKeyValue)(nil),                        // 12: ficus.GrpcStringKeyValue
	(*timestamppb.Timestamp)(nil),                     // 13: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                             // 14: google.protobuf.Empty
}
var file_front_contract_proto_depIdxs = []int32{
	1,  // 0: ficus.GrpcSubscriptionAndPipelinesStateResponse.cases:type_name -> ficus.GrpcProcessCaseMetadataWithStamp
	4,  // 1: ficus.GrpcProcessCaseMetadataWithStamp.metadata:type_name -> ficus.GrpcProcessCaseMetadata
	10, // 2: ficus.GrpcGetPipelineCaseContextValuesRequest.subscriptionId:type_name -> ficus.GrpcGuid
	10, // 3: ficus.GrpcGetPipelineCaseContextValuesRequest.pipelineId:type_name -> ficus.GrpcGuid
	5,  // 4: ficus.GrpcGetPipelineCaseContextValuesRequest.caseName:type_name -> ficus.GrpcCaseName
	4,  // 5: ficus.GrpcKafkaUpdate.processCaseMetadata:type_name -> ficus.GrpcProcessCaseMetadata
	9,  // 6: ficus.GrpcKafkaUpdate.pipelinePartInfo:type_name -> ficus.GrpcPipelinePartInfo
	11, // 7: ficus.GrpcKafkaUpdate.contextValues:type_name -> ficus.GrpcContextValueWithKeyName
	5,  // 8: ficus.GrpcProcessCaseMetadata.caseName:type_name -> ficus.GrpcCaseName
	10, // 9: ficus.GrpcProcessCaseMetadata.subscriptionId:type_name -> ficus.GrpcGuid
	10, // 10: ficus.GrpcProcessCaseMetadata.pipelineId:type_name -> ficus.GrpcGuid
	12, // 11: ficus.GrpcProcessCaseMetadata.metadata:type_name -> ficus.GrpcStringKeyValue
	7,  // 12: ficus.GrpcCaseContextValues.contextValues:type_name -> ficus.GrpcPipelinePartContextValues
	9,  // 13: ficus.GrpcPipelinePartContextValues.pipelinePartInfo:type_name -> ficus.GrpcPipelinePartInfo
	13, // 14: ficus.GrpcPipelinePartContextValues.stamp:type_name -> google.protobuf.Timestamp
	8,  // 15: ficus.GrpcPipelinePartContextValues.execution_results:type_name -> ficus.GrpcCasePipelinePartExecutionResult
	11, // 16: ficus.GrpcCasePipelinePartExecutionResult.contextValues:type_name -> ficus.GrpcContextValueWithKeyName
	10, // 17: ficus.GrpcPipelinePartInfo.id:type_name -> ficus.GrpcGuid
	10, // 18: ficus.GrpcPipelinePartInfo.execution_id:type_name -> ficus.GrpcGuid
	14, // 19: ficus.GrpcPipelinePartsContextValuesService.GetSubscriptionAndPipelinesState:input_type -> google.protobuf.Empty
	2,  // 20: ficus.GrpcPipelinePartsContextValuesService.GetPipelineCaseContextValue:input_type -> ficus.GrpcGetPipelineCaseContextValuesRequest
	0,  // 21: ficus.GrpcPipelinePartsContextValuesService.GetSubscriptionAndPipelinesState:output_type -> ficus.GrpcSubscriptionAndPipelinesStateResponse
	6,  // 22: ficus.GrpcPipelinePartsContextValuesService.GetPipelineCaseContextValue:output_type -> ficus.GrpcCaseContextValues
	21, // [21:23] is the sub-list for method output_type
	19, // [19:21] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_front_contract_proto_init() }
func file_front_contract_proto_init() {
	if File_front_contract_proto != nil {
		return
	}
	file_pipelines_and_context_proto_init()
	file_util_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_front_contract_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcSubscriptionAndPipelinesStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_front_contract_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcProcessCaseMetadataWithStamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_front_contract_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcGetPipelineCaseContextValuesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_front_contract_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcKafkaUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_front_contract_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcProcessCaseMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_front_contract_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcCaseName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_front_contract_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcCaseContextValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_front_contract_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcPipelinePartContextValues); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_front_contract_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcCasePipelinePartExecutionResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_front_contract_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcPipelinePartInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_front_contract_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_front_contract_proto_goTypes,
		DependencyIndexes: file_front_contract_proto_depIdxs,
		MessageInfos:      file_front_contract_proto_msgTypes,
	}.Build()
	File_front_contract_proto = out.File
	file_front_contract_proto_rawDesc = nil
	file_front_contract_proto_goTypes = nil
	file_front_contract_proto_depIdxs = nil
}
