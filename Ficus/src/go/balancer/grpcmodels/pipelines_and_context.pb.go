// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.28.3
// source: pipelines_and_context.proto

package grpcmodels

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GrpcGraphKind int32

const (
	GrpcGraphKind_None GrpcGraphKind = 0
	GrpcGraphKind_DAG  GrpcGraphKind = 1
)

// Enum value maps for GrpcGraphKind.
var (
	GrpcGraphKind_name = map[int32]string{
		0: "None",
		1: "DAG",
	}
	GrpcGraphKind_value = map[string]int32{
		"None": 0,
		"DAG":  1,
	}
)

func (x GrpcGraphKind) Enum() *GrpcGraphKind {
	p := new(GrpcGraphKind)
	*p = x
	return p
}

func (x GrpcGraphKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GrpcGraphKind) Descriptor() protoreflect.EnumDescriptor {
	return file_pipelines_and_context_proto_enumTypes[0].Descriptor()
}

func (GrpcGraphKind) Type() protoreflect.EnumType {
	return &file_pipelines_and_context_proto_enumTypes[0]
}

func (x GrpcGraphKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GrpcGraphKind.Descriptor instead.
func (GrpcGraphKind) EnumDescriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{0}
}

type GrpcDurationKind int32

const (
	GrpcDurationKind_Unspecified GrpcDurationKind = 0
	GrpcDurationKind_Nanos       GrpcDurationKind = 1
	GrpcDurationKind_Micros      GrpcDurationKind = 2
	GrpcDurationKind_Millis      GrpcDurationKind = 3
	GrpcDurationKind_Seconds     GrpcDurationKind = 4
	GrpcDurationKind_Minutes     GrpcDurationKind = 5
	GrpcDurationKind_Hours       GrpcDurationKind = 6
	GrpcDurationKind_Days        GrpcDurationKind = 7
)

// Enum value maps for GrpcDurationKind.
var (
	GrpcDurationKind_name = map[int32]string{
		0: "Unspecified",
		1: "Nanos",
		2: "Micros",
		3: "Millis",
		4: "Seconds",
		5: "Minutes",
		6: "Hours",
		7: "Days",
	}
	GrpcDurationKind_value = map[string]int32{
		"Unspecified": 0,
		"Nanos":       1,
		"Micros":      2,
		"Millis":      3,
		"Seconds":     4,
		"Minutes":     5,
		"Hours":       6,
		"Days":        7,
	}
)

func (x GrpcDurationKind) Enum() *GrpcDurationKind {
	p := new(GrpcDurationKind)
	*p = x
	return p
}

func (x GrpcDurationKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GrpcDurationKind) Descriptor() protoreflect.EnumDescriptor {
	return file_pipelines_and_context_proto_enumTypes[1].Descriptor()
}

func (GrpcDurationKind) Type() protoreflect.EnumType {
	return &file_pipelines_and_context_proto_enumTypes[1]
}

func (x GrpcDurationKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GrpcDurationKind.Descriptor instead.
func (GrpcDurationKind) EnumDescriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{1}
}

type GrpcUnderlyingPatternKind int32

const (
	GrpcUnderlyingPatternKind_StrictLoop             GrpcUnderlyingPatternKind = 0
	GrpcUnderlyingPatternKind_PrimitiveTandemArray   GrpcUnderlyingPatternKind = 1
	GrpcUnderlyingPatternKind_MaximalTandemArray     GrpcUnderlyingPatternKind = 2
	GrpcUnderlyingPatternKind_MaximalRepeat          GrpcUnderlyingPatternKind = 3
	GrpcUnderlyingPatternKind_SuperMaximalRepeat     GrpcUnderlyingPatternKind = 4
	GrpcUnderlyingPatternKind_NearSuperMaximalRepeat GrpcUnderlyingPatternKind = 5
	GrpcUnderlyingPatternKind_Unknown                GrpcUnderlyingPatternKind = 6
)

// Enum value maps for GrpcUnderlyingPatternKind.
var (
	GrpcUnderlyingPatternKind_name = map[int32]string{
		0: "StrictLoop",
		1: "PrimitiveTandemArray",
		2: "MaximalTandemArray",
		3: "MaximalRepeat",
		4: "SuperMaximalRepeat",
		5: "NearSuperMaximalRepeat",
		6: "Unknown",
	}
	GrpcUnderlyingPatternKind_value = map[string]int32{
		"StrictLoop":             0,
		"PrimitiveTandemArray":   1,
		"MaximalTandemArray":     2,
		"MaximalRepeat":          3,
		"SuperMaximalRepeat":     4,
		"NearSuperMaximalRepeat": 5,
		"Unknown":                6,
	}
)

func (x GrpcUnderlyingPatternKind) Enum() *GrpcUnderlyingPatternKind {
	p := new(GrpcUnderlyingPatternKind)
	*p = x
	return p
}

func (x GrpcUnderlyingPatternKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GrpcUnderlyingPatternKind) Descriptor() protoreflect.EnumDescriptor {
	return file_pipelines_and_context_proto_enumTypes[2].Descriptor()
}

func (GrpcUnderlyingPatternKind) Type() protoreflect.EnumType {
	return &file_pipelines_and_context_proto_enumTypes[2]
}

func (x GrpcUnderlyingPatternKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GrpcUnderlyingPatternKind.Descriptor instead.
func (GrpcUnderlyingPatternKind) EnumDescriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{2}
}

type GrpcContextKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GrpcContextKey) Reset() {
	*x = GrpcContextKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcContextKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcContextKey) ProtoMessage() {}

func (x *GrpcContextKey) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcContextKey.ProtoReflect.Descriptor instead.
func (*GrpcContextKey) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{0}
}

func (x *GrpcContextKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GrpcContextValueWithKeyName struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyName string            `protobuf:"bytes,1,opt,name=key_name,json=keyName,proto3" json:"key_name,omitempty"`
	Value   *GrpcContextValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GrpcContextValueWithKeyName) Reset() {
	*x = GrpcContextValueWithKeyName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcContextValueWithKeyName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcContextValueWithKeyName) ProtoMessage() {}

func (x *GrpcContextValueWithKeyName) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcContextValueWithKeyName.ProtoReflect.Descriptor instead.
func (*GrpcContextValueWithKeyName) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{1}
}

func (x *GrpcContextValueWithKeyName) GetKeyName() string {
	if x != nil {
		return x.KeyName
	}
	return ""
}

func (x *GrpcContextValueWithKeyName) GetValue() *GrpcContextValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type GrpcContextValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ContextValue:
	//
	//	*GrpcContextValue_String_
	//	*GrpcContextValue_HashesLog
	//	*GrpcContextValue_NamesLog
	//	*GrpcContextValue_Uint32
	//	*GrpcContextValue_TracesSubArrays
	//	*GrpcContextValue_TraceIndexSubArrays
	//	*GrpcContextValue_Bool
	//	*GrpcContextValue_XesEventLog
	//	*GrpcContextValue_ColorsLog
	//	*GrpcContextValue_Enum
	//	*GrpcContextValue_EventLogInfo
	//	*GrpcContextValue_Strings
	//	*GrpcContextValue_Pipeline
	//	*GrpcContextValue_PetriNet
	//	*GrpcContextValue_Graph
	//	*GrpcContextValue_Float
	//	*GrpcContextValue_Annotation
	//	*GrpcContextValue_Dataset
	//	*GrpcContextValue_LabeledDataset
	//	*GrpcContextValue_Bytes
	//	*GrpcContextValue_LogTimelineDiagram
	//	*GrpcContextValue_FloatArray
	//	*GrpcContextValue_IntArray
	//	*GrpcContextValue_UintArray
	//	*GrpcContextValue_Json
	ContextValue isGrpcContextValue_ContextValue `protobuf_oneof:"contextValue"`
}

func (x *GrpcContextValue) Reset() {
	*x = GrpcContextValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcContextValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcContextValue) ProtoMessage() {}

func (x *GrpcContextValue) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcContextValue.ProtoReflect.Descriptor instead.
func (*GrpcContextValue) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{2}
}

func (m *GrpcContextValue) GetContextValue() isGrpcContextValue_ContextValue {
	if m != nil {
		return m.ContextValue
	}
	return nil
}

func (x *GrpcContextValue) GetString_() string {
	if x, ok := x.GetContextValue().(*GrpcContextValue_String_); ok {
		return x.String_
	}
	return ""
}

func (x *GrpcContextValue) GetHashesLog() *GrpcHashesEventLogContextValue {
	if x, ok := x.GetContextValue().(*GrpcContextValue_HashesLog); ok {
		return x.HashesLog
	}
	return nil
}

func (x *GrpcContextValue) GetNamesLog() *GrpcNamesEventLogContextValue {
	if x, ok := x.GetContextValue().(*GrpcContextValue_NamesLog); ok {
		return x.NamesLog
	}
	return nil
}

func (x *GrpcContextValue) GetUint32() uint32 {
	if x, ok := x.GetContextValue().(*GrpcContextValue_Uint32); ok {
		return x.Uint32
	}
	return 0
}

func (x *GrpcContextValue) GetTracesSubArrays() *GrpcEventLogTraceSubArraysContextValue {
	if x, ok := x.GetContextValue().(*GrpcContextValue_TracesSubArrays); ok {
		return x.TracesSubArrays
	}
	return nil
}

func (x *GrpcContextValue) GetTraceIndexSubArrays() *GrpcSubArraysWithTraceIndexContextValue {
	if x, ok := x.GetContextValue().(*GrpcContextValue_TraceIndexSubArrays); ok {
		return x.TraceIndexSubArrays
	}
	return nil
}

func (x *GrpcContextValue) GetBool() bool {
	if x, ok := x.GetContextValue().(*GrpcContextValue_Bool); ok {
		return x.Bool
	}
	return false
}

func (x *GrpcContextValue) GetXesEventLog() *GrpcNamesEventLogContextValue {
	if x, ok := x.GetContextValue().(*GrpcContextValue_XesEventLog); ok {
		return x.XesEventLog
	}
	return nil
}

func (x *GrpcContextValue) GetColorsLog() *GrpcColorsEventLog {
	if x, ok := x.GetContextValue().(*GrpcContextValue_ColorsLog); ok {
		return x.ColorsLog
	}
	return nil
}

func (x *GrpcContextValue) GetEnum() *GrpcEnum {
	if x, ok := x.GetContextValue().(*GrpcContextValue_Enum); ok {
		return x.Enum
	}
	return nil
}

func (x *GrpcContextValue) GetEventLogInfo() *GrpcEventLogInfo {
	if x, ok := x.GetContextValue().(*GrpcContextValue_EventLogInfo); ok {
		return x.EventLogInfo
	}
	return nil
}

func (x *GrpcContextValue) GetStrings() *GrpcStrings {
	if x, ok := x.GetContextValue().(*GrpcContextValue_Strings); ok {
		return x.Strings
	}
	return nil
}

func (x *GrpcContextValue) GetPipeline() *GrpcPipeline {
	if x, ok := x.GetContextValue().(*GrpcContextValue_Pipeline); ok {
		return x.Pipeline
	}
	return nil
}

func (x *GrpcContextValue) GetPetriNet() *GrpcPetriNet {
	if x, ok := x.GetContextValue().(*GrpcContextValue_PetriNet); ok {
		return x.PetriNet
	}
	return nil
}

func (x *GrpcContextValue) GetGraph() *GrpcGraph {
	if x, ok := x.GetContextValue().(*GrpcContextValue_Graph); ok {
		return x.Graph
	}
	return nil
}

func (x *GrpcContextValue) GetFloat() float32 {
	if x, ok := x.GetContextValue().(*GrpcContextValue_Float); ok {
		return x.Float
	}
	return 0
}

func (x *GrpcContextValue) GetAnnotation() *GrpcAnnotation {
	if x, ok := x.GetContextValue().(*GrpcContextValue_Annotation); ok {
		return x.Annotation
	}
	return nil
}

func (x *GrpcContextValue) GetDataset() *GrpcDataset {
	if x, ok := x.GetContextValue().(*GrpcContextValue_Dataset); ok {
		return x.Dataset
	}
	return nil
}

func (x *GrpcContextValue) GetLabeledDataset() *GrpcLabeledDataset {
	if x, ok := x.GetContextValue().(*GrpcContextValue_LabeledDataset); ok {
		return x.LabeledDataset
	}
	return nil
}

func (x *GrpcContextValue) GetBytes() *GrpcBytes {
	if x, ok := x.GetContextValue().(*GrpcContextValue_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (x *GrpcContextValue) GetLogTimelineDiagram() *GrpcLogTimelineDiagram {
	if x, ok := x.GetContextValue().(*GrpcContextValue_LogTimelineDiagram); ok {
		return x.LogTimelineDiagram
	}
	return nil
}

func (x *GrpcContextValue) GetFloatArray() *GrpcFloatArray {
	if x, ok := x.GetContextValue().(*GrpcContextValue_FloatArray); ok {
		return x.FloatArray
	}
	return nil
}

func (x *GrpcContextValue) GetIntArray() *GrpcIntArray {
	if x, ok := x.GetContextValue().(*GrpcContextValue_IntArray); ok {
		return x.IntArray
	}
	return nil
}

func (x *GrpcContextValue) GetUintArray() *GrpcUintArray {
	if x, ok := x.GetContextValue().(*GrpcContextValue_UintArray); ok {
		return x.UintArray
	}
	return nil
}

func (x *GrpcContextValue) GetJson() string {
	if x, ok := x.GetContextValue().(*GrpcContextValue_Json); ok {
		return x.Json
	}
	return ""
}

type isGrpcContextValue_ContextValue interface {
	isGrpcContextValue_ContextValue()
}

type GrpcContextValue_String_ struct {
	String_ string `protobuf:"bytes,1,opt,name=string,proto3,oneof"`
}

type GrpcContextValue_HashesLog struct {
	HashesLog *GrpcHashesEventLogContextValue `protobuf:"bytes,2,opt,name=hashes_log,json=hashesLog,proto3,oneof"`
}

type GrpcContextValue_NamesLog struct {
	NamesLog *GrpcNamesEventLogContextValue `protobuf:"bytes,3,opt,name=names_log,json=namesLog,proto3,oneof"`
}

type GrpcContextValue_Uint32 struct {
	Uint32 uint32 `protobuf:"varint,4,opt,name=uint32,proto3,oneof"`
}

type GrpcContextValue_TracesSubArrays struct {
	TracesSubArrays *GrpcEventLogTraceSubArraysContextValue `protobuf:"bytes,5,opt,name=traces_sub_arrays,json=tracesSubArrays,proto3,oneof"`
}

type GrpcContextValue_TraceIndexSubArrays struct {
	TraceIndexSubArrays *GrpcSubArraysWithTraceIndexContextValue `protobuf:"bytes,6,opt,name=trace_index_sub_arrays,json=traceIndexSubArrays,proto3,oneof"`
}

type GrpcContextValue_Bool struct {
	Bool bool `protobuf:"varint,7,opt,name=bool,proto3,oneof"`
}

type GrpcContextValue_XesEventLog struct {
	XesEventLog *GrpcNamesEventLogContextValue `protobuf:"bytes,8,opt,name=xes_event_log,json=xesEventLog,proto3,oneof"`
}

type GrpcContextValue_ColorsLog struct {
	ColorsLog *GrpcColorsEventLog `protobuf:"bytes,9,opt,name=colors_log,json=colorsLog,proto3,oneof"`
}

type GrpcContextValue_Enum struct {
	Enum *GrpcEnum `protobuf:"bytes,10,opt,name=enum,proto3,oneof"`
}

type GrpcContextValue_EventLogInfo struct {
	EventLogInfo *GrpcEventLogInfo `protobuf:"bytes,11,opt,name=event_log_info,json=eventLogInfo,proto3,oneof"`
}

type GrpcContextValue_Strings struct {
	Strings *GrpcStrings `protobuf:"bytes,12,opt,name=strings,proto3,oneof"`
}

type GrpcContextValue_Pipeline struct {
	Pipeline *GrpcPipeline `protobuf:"bytes,13,opt,name=pipeline,proto3,oneof"`
}

type GrpcContextValue_PetriNet struct {
	PetriNet *GrpcPetriNet `protobuf:"bytes,14,opt,name=petriNet,proto3,oneof"`
}

type GrpcContextValue_Graph struct {
	Graph *GrpcGraph `protobuf:"bytes,15,opt,name=graph,proto3,oneof"`
}

type GrpcContextValue_Float struct {
	Float float32 `protobuf:"fixed32,16,opt,name=float,proto3,oneof"`
}

type GrpcContextValue_Annotation struct {
	Annotation *GrpcAnnotation `protobuf:"bytes,17,opt,name=annotation,proto3,oneof"`
}

type GrpcContextValue_Dataset struct {
	Dataset *GrpcDataset `protobuf:"bytes,18,opt,name=dataset,proto3,oneof"`
}

type GrpcContextValue_LabeledDataset struct {
	LabeledDataset *GrpcLabeledDataset `protobuf:"bytes,19,opt,name=labeled_dataset,json=labeledDataset,proto3,oneof"`
}

type GrpcContextValue_Bytes struct {
	Bytes *GrpcBytes `protobuf:"bytes,20,opt,name=bytes,proto3,oneof"`
}

type GrpcContextValue_LogTimelineDiagram struct {
	LogTimelineDiagram *GrpcLogTimelineDiagram `protobuf:"bytes,21,opt,name=logTimelineDiagram,proto3,oneof"`
}

type GrpcContextValue_FloatArray struct {
	FloatArray *GrpcFloatArray `protobuf:"bytes,22,opt,name=float_array,json=floatArray,proto3,oneof"`
}

type GrpcContextValue_IntArray struct {
	IntArray *GrpcIntArray `protobuf:"bytes,23,opt,name=int_array,json=intArray,proto3,oneof"`
}

type GrpcContextValue_UintArray struct {
	UintArray *GrpcUintArray `protobuf:"bytes,24,opt,name=uint_array,json=uintArray,proto3,oneof"`
}

type GrpcContextValue_Json struct {
	Json string `protobuf:"bytes,25,opt,name=json,proto3,oneof"`
}

func (*GrpcContextValue_String_) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_HashesLog) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_NamesLog) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_Uint32) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_TracesSubArrays) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_TraceIndexSubArrays) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_Bool) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_XesEventLog) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_ColorsLog) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_Enum) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_EventLogInfo) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_Strings) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_Pipeline) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_PetriNet) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_Graph) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_Float) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_Annotation) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_Dataset) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_LabeledDataset) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_Bytes) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_LogTimelineDiagram) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_FloatArray) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_IntArray) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_UintArray) isGrpcContextValue_ContextValue() {}

func (*GrpcContextValue_Json) isGrpcContextValue_ContextValue() {}

type GrpcFloatArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []float64 `protobuf:"fixed64,1,rep,packed,name=items,proto3" json:"items,omitempty"`
}

func (x *GrpcFloatArray) Reset() {
	*x = GrpcFloatArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcFloatArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcFloatArray) ProtoMessage() {}

func (x *GrpcFloatArray) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcFloatArray.ProtoReflect.Descriptor instead.
func (*GrpcFloatArray) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{3}
}

func (x *GrpcFloatArray) GetItems() []float64 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GrpcIntArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []int64 `protobuf:"varint,1,rep,packed,name=items,proto3" json:"items,omitempty"`
}

func (x *GrpcIntArray) Reset() {
	*x = GrpcIntArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcIntArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcIntArray) ProtoMessage() {}

func (x *GrpcIntArray) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcIntArray.ProtoReflect.Descriptor instead.
func (*GrpcIntArray) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{4}
}

func (x *GrpcIntArray) GetItems() []int64 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GrpcUintArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []uint64 `protobuf:"varint,1,rep,packed,name=items,proto3" json:"items,omitempty"`
}

func (x *GrpcUintArray) Reset() {
	*x = GrpcUintArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcUintArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcUintArray) ProtoMessage() {}

func (x *GrpcUintArray) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcUintArray.ProtoReflect.Descriptor instead.
func (*GrpcUintArray) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{5}
}

func (x *GrpcUintArray) GetItems() []uint64 {
	if x != nil {
		return x.Items
	}
	return nil
}

type GrpcContextKeyValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   *GrpcContextKey   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value *GrpcContextValue `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GrpcContextKeyValue) Reset() {
	*x = GrpcContextKeyValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcContextKeyValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcContextKeyValue) ProtoMessage() {}

func (x *GrpcContextKeyValue) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcContextKeyValue.ProtoReflect.Descriptor instead.
func (*GrpcContextKeyValue) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{6}
}

func (x *GrpcContextKeyValue) GetKey() *GrpcContextKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GrpcContextKeyValue) GetValue() *GrpcContextValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type GrpcHashesEventLogContextValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log *GrpcHashesEventLog `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *GrpcHashesEventLogContextValue) Reset() {
	*x = GrpcHashesEventLogContextValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcHashesEventLogContextValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcHashesEventLogContextValue) ProtoMessage() {}

func (x *GrpcHashesEventLogContextValue) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcHashesEventLogContextValue.ProtoReflect.Descriptor instead.
func (*GrpcHashesEventLogContextValue) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{7}
}

func (x *GrpcHashesEventLogContextValue) GetLog() *GrpcHashesEventLog {
	if x != nil {
		return x.Log
	}
	return nil
}

type GrpcNamesEventLogContextValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Log *GrpcNamesEventLog `protobuf:"bytes,1,opt,name=log,proto3" json:"log,omitempty"`
}

func (x *GrpcNamesEventLogContextValue) Reset() {
	*x = GrpcNamesEventLogContextValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcNamesEventLogContextValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcNamesEventLogContextValue) ProtoMessage() {}

func (x *GrpcNamesEventLogContextValue) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcNamesEventLogContextValue.ProtoReflect.Descriptor instead.
func (*GrpcNamesEventLogContextValue) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{8}
}

func (x *GrpcNamesEventLogContextValue) GetLog() *GrpcNamesEventLog {
	if x != nil {
		return x.Log
	}
	return nil
}

type GrpcEventLogTraceSubArraysContextValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TracesSubArrays []*GrpcTraceSubArrays `protobuf:"bytes,1,rep,name=traces_sub_arrays,json=tracesSubArrays,proto3" json:"traces_sub_arrays,omitempty"`
}

func (x *GrpcEventLogTraceSubArraysContextValue) Reset() {
	*x = GrpcEventLogTraceSubArraysContextValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcEventLogTraceSubArraysContextValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcEventLogTraceSubArraysContextValue) ProtoMessage() {}

func (x *GrpcEventLogTraceSubArraysContextValue) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcEventLogTraceSubArraysContextValue.ProtoReflect.Descriptor instead.
func (*GrpcEventLogTraceSubArraysContextValue) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{9}
}

func (x *GrpcEventLogTraceSubArraysContextValue) GetTracesSubArrays() []*GrpcTraceSubArrays {
	if x != nil {
		return x.TracesSubArrays
	}
	return nil
}

type GrpcTraceSubArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   uint32 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *GrpcTraceSubArray) Reset() {
	*x = GrpcTraceSubArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcTraceSubArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcTraceSubArray) ProtoMessage() {}

func (x *GrpcTraceSubArray) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcTraceSubArray.ProtoReflect.Descriptor instead.
func (*GrpcTraceSubArray) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{10}
}

func (x *GrpcTraceSubArray) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *GrpcTraceSubArray) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

type GrpcTraceSubArrays struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubArrays []*GrpcTraceSubArray `protobuf:"bytes,1,rep,name=sub_arrays,json=subArrays,proto3" json:"sub_arrays,omitempty"`
}

func (x *GrpcTraceSubArrays) Reset() {
	*x = GrpcTraceSubArrays{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcTraceSubArrays) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcTraceSubArrays) ProtoMessage() {}

func (x *GrpcTraceSubArrays) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcTraceSubArrays.ProtoReflect.Descriptor instead.
func (*GrpcTraceSubArrays) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{11}
}

func (x *GrpcTraceSubArrays) GetSubArrays() []*GrpcTraceSubArray {
	if x != nil {
		return x.SubArrays
	}
	return nil
}

type GrpcSubArrayWithTraceIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubArray   *GrpcTraceSubArray `protobuf:"bytes,1,opt,name=sub_array,json=subArray,proto3" json:"sub_array,omitempty"`
	TraceIndex uint32             `protobuf:"varint,2,opt,name=trace_index,json=traceIndex,proto3" json:"trace_index,omitempty"`
}

func (x *GrpcSubArrayWithTraceIndex) Reset() {
	*x = GrpcSubArrayWithTraceIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcSubArrayWithTraceIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcSubArrayWithTraceIndex) ProtoMessage() {}

func (x *GrpcSubArrayWithTraceIndex) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcSubArrayWithTraceIndex.ProtoReflect.Descriptor instead.
func (*GrpcSubArrayWithTraceIndex) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{12}
}

func (x *GrpcSubArrayWithTraceIndex) GetSubArray() *GrpcTraceSubArray {
	if x != nil {
		return x.SubArray
	}
	return nil
}

func (x *GrpcSubArrayWithTraceIndex) GetTraceIndex() uint32 {
	if x != nil {
		return x.TraceIndex
	}
	return 0
}

type GrpcSubArraysWithTraceIndexContextValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubArrays []*GrpcSubArrayWithTraceIndex `protobuf:"bytes,1,rep,name=sub_arrays,json=subArrays,proto3" json:"sub_arrays,omitempty"`
}

func (x *GrpcSubArraysWithTraceIndexContextValue) Reset() {
	*x = GrpcSubArraysWithTraceIndexContextValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcSubArraysWithTraceIndexContextValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcSubArraysWithTraceIndexContextValue) ProtoMessage() {}

func (x *GrpcSubArraysWithTraceIndexContextValue) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcSubArraysWithTraceIndexContextValue.ProtoReflect.Descriptor instead.
func (*GrpcSubArraysWithTraceIndexContextValue) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{13}
}

func (x *GrpcSubArraysWithTraceIndexContextValue) GetSubArrays() []*GrpcSubArrayWithTraceIndex {
	if x != nil {
		return x.SubArrays
	}
	return nil
}

type GrpcColorsEventLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mapping     []*GrpcColorsEventLogMapping `protobuf:"bytes,1,rep,name=mapping,proto3" json:"mapping,omitempty"`
	Traces      []*GrpcColorsTrace           `protobuf:"bytes,2,rep,name=traces,proto3" json:"traces,omitempty"`
	Adjustments []*GrpcColorsLogAdjustment   `protobuf:"bytes,3,rep,name=adjustments,proto3" json:"adjustments,omitempty"`
}

func (x *GrpcColorsEventLog) Reset() {
	*x = GrpcColorsEventLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcColorsEventLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcColorsEventLog) ProtoMessage() {}

func (x *GrpcColorsEventLog) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcColorsEventLog.ProtoReflect.Descriptor instead.
func (*GrpcColorsEventLog) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{14}
}

func (x *GrpcColorsEventLog) GetMapping() []*GrpcColorsEventLogMapping {
	if x != nil {
		return x.Mapping
	}
	return nil
}

func (x *GrpcColorsEventLog) GetTraces() []*GrpcColorsTrace {
	if x != nil {
		return x.Traces
	}
	return nil
}

func (x *GrpcColorsEventLog) GetAdjustments() []*GrpcColorsLogAdjustment {
	if x != nil {
		return x.Adjustments
	}
	return nil
}

type GrpcColorsLogAdjustment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Selection:
	//
	//	*GrpcColorsLogAdjustment_RectangleAdjustment
	//	*GrpcColorsLogAdjustment_AxisAfterTrace
	Selection isGrpcColorsLogAdjustment_Selection `protobuf_oneof:"selection"`
}

func (x *GrpcColorsLogAdjustment) Reset() {
	*x = GrpcColorsLogAdjustment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcColorsLogAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcColorsLogAdjustment) ProtoMessage() {}

func (x *GrpcColorsLogAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcColorsLogAdjustment.ProtoReflect.Descriptor instead.
func (*GrpcColorsLogAdjustment) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{15}
}

func (m *GrpcColorsLogAdjustment) GetSelection() isGrpcColorsLogAdjustment_Selection {
	if m != nil {
		return m.Selection
	}
	return nil
}

func (x *GrpcColorsLogAdjustment) GetRectangleAdjustment() *GrpcColorsLogRectangleAdjustment {
	if x, ok := x.GetSelection().(*GrpcColorsLogAdjustment_RectangleAdjustment); ok {
		return x.RectangleAdjustment
	}
	return nil
}

func (x *GrpcColorsLogAdjustment) GetAxisAfterTrace() *GrpcColorsLogXAxisAfterTraceAdjustment {
	if x, ok := x.GetSelection().(*GrpcColorsLogAdjustment_AxisAfterTrace); ok {
		return x.AxisAfterTrace
	}
	return nil
}

type isGrpcColorsLogAdjustment_Selection interface {
	isGrpcColorsLogAdjustment_Selection()
}

type GrpcColorsLogAdjustment_RectangleAdjustment struct {
	RectangleAdjustment *GrpcColorsLogRectangleAdjustment `protobuf:"bytes,1,opt,name=rectangle_adjustment,json=rectangleAdjustment,proto3,oneof"`
}

type GrpcColorsLogAdjustment_AxisAfterTrace struct {
	AxisAfterTrace *GrpcColorsLogXAxisAfterTraceAdjustment `protobuf:"bytes,2,opt,name=axis_after_trace,json=axisAfterTrace,proto3,oneof"`
}

func (*GrpcColorsLogAdjustment_RectangleAdjustment) isGrpcColorsLogAdjustment_Selection() {}

func (*GrpcColorsLogAdjustment_AxisAfterTrace) isGrpcColorsLogAdjustment_Selection() {}

type GrpcColorsLogRectangleAdjustment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpLeftPoint                    *GrpcLogPoint `protobuf:"bytes,1,opt,name=up_left_point,json=upLeftPoint,proto3" json:"up_left_point,omitempty"`
	DownRightPoint                 *GrpcLogPoint `protobuf:"bytes,2,opt,name=down_right_point,json=downRightPoint,proto3" json:"down_right_point,omitempty"`
	ExtendToNearestVerticalBorders bool          `protobuf:"varint,3,opt,name=extend_to_nearest_vertical_borders,json=extendToNearestVerticalBorders,proto3" json:"extend_to_nearest_vertical_borders,omitempty"`
}

func (x *GrpcColorsLogRectangleAdjustment) Reset() {
	*x = GrpcColorsLogRectangleAdjustment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcColorsLogRectangleAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcColorsLogRectangleAdjustment) ProtoMessage() {}

func (x *GrpcColorsLogRectangleAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcColorsLogRectangleAdjustment.ProtoReflect.Descriptor instead.
func (*GrpcColorsLogRectangleAdjustment) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{16}
}

func (x *GrpcColorsLogRectangleAdjustment) GetUpLeftPoint() *GrpcLogPoint {
	if x != nil {
		return x.UpLeftPoint
	}
	return nil
}

func (x *GrpcColorsLogRectangleAdjustment) GetDownRightPoint() *GrpcLogPoint {
	if x != nil {
		return x.DownRightPoint
	}
	return nil
}

func (x *GrpcColorsLogRectangleAdjustment) GetExtendToNearestVerticalBorders() bool {
	if x != nil {
		return x.ExtendToNearestVerticalBorders
	}
	return false
}

type GrpcLogPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceIndex uint64 `protobuf:"varint,1,opt,name=trace_index,json=traceIndex,proto3" json:"trace_index,omitempty"`
	EventIndex uint64 `protobuf:"varint,2,opt,name=event_index,json=eventIndex,proto3" json:"event_index,omitempty"`
}

func (x *GrpcLogPoint) Reset() {
	*x = GrpcLogPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcLogPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcLogPoint) ProtoMessage() {}

func (x *GrpcLogPoint) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcLogPoint.ProtoReflect.Descriptor instead.
func (*GrpcLogPoint) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{17}
}

func (x *GrpcLogPoint) GetTraceIndex() uint64 {
	if x != nil {
		return x.TraceIndex
	}
	return 0
}

func (x *GrpcLogPoint) GetEventIndex() uint64 {
	if x != nil {
		return x.EventIndex
	}
	return 0
}

type GrpcColorsLogXAxisAfterTraceAdjustment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceIndex uint64 `protobuf:"varint,1,opt,name=trace_index,json=traceIndex,proto3" json:"trace_index,omitempty"`
}

func (x *GrpcColorsLogXAxisAfterTraceAdjustment) Reset() {
	*x = GrpcColorsLogXAxisAfterTraceAdjustment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcColorsLogXAxisAfterTraceAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcColorsLogXAxisAfterTraceAdjustment) ProtoMessage() {}

func (x *GrpcColorsLogXAxisAfterTraceAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcColorsLogXAxisAfterTraceAdjustment.ProtoReflect.Descriptor instead.
func (*GrpcColorsLogXAxisAfterTraceAdjustment) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{18}
}

func (x *GrpcColorsLogXAxisAfterTraceAdjustment) GetTraceIndex() uint64 {
	if x != nil {
		return x.TraceIndex
	}
	return 0
}

type GrpcColorsEventLogMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string     `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Color *GrpcColor `protobuf:"bytes,2,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *GrpcColorsEventLogMapping) Reset() {
	*x = GrpcColorsEventLogMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcColorsEventLogMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcColorsEventLogMapping) ProtoMessage() {}

func (x *GrpcColorsEventLogMapping) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcColorsEventLogMapping.ProtoReflect.Descriptor instead.
func (*GrpcColorsEventLogMapping) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{19}
}

func (x *GrpcColorsEventLogMapping) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GrpcColorsEventLogMapping) GetColor() *GrpcColor {
	if x != nil {
		return x.Color
	}
	return nil
}

type GrpcColorsTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventColors   []*GrpcColoredRectangle `protobuf:"bytes,1,rep,name=event_colors,json=eventColors,proto3" json:"event_colors,omitempty"`
	ConstantWidth bool                    `protobuf:"varint,2,opt,name=constant_width,json=constantWidth,proto3" json:"constant_width,omitempty"`
}

func (x *GrpcColorsTrace) Reset() {
	*x = GrpcColorsTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcColorsTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcColorsTrace) ProtoMessage() {}

func (x *GrpcColorsTrace) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcColorsTrace.ProtoReflect.Descriptor instead.
func (*GrpcColorsTrace) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{20}
}

func (x *GrpcColorsTrace) GetEventColors() []*GrpcColoredRectangle {
	if x != nil {
		return x.EventColors
	}
	return nil
}

func (x *GrpcColorsTrace) GetConstantWidth() bool {
	if x != nil {
		return x.ConstantWidth
	}
	return false
}

type GrpcColoredRectangle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColorIndex uint32  `protobuf:"varint,1,opt,name=color_index,json=colorIndex,proto3" json:"color_index,omitempty"`
	StartX     float64 `protobuf:"fixed64,2,opt,name=start_x,json=startX,proto3" json:"start_x,omitempty"`
	Length     float64 `protobuf:"fixed64,3,opt,name=length,proto3" json:"length,omitempty"`
}

func (x *GrpcColoredRectangle) Reset() {
	*x = GrpcColoredRectangle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcColoredRectangle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcColoredRectangle) ProtoMessage() {}

func (x *GrpcColoredRectangle) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcColoredRectangle.ProtoReflect.Descriptor instead.
func (*GrpcColoredRectangle) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{21}
}

func (x *GrpcColoredRectangle) GetColorIndex() uint32 {
	if x != nil {
		return x.ColorIndex
	}
	return 0
}

func (x *GrpcColoredRectangle) GetStartX() float64 {
	if x != nil {
		return x.StartX
	}
	return 0
}

func (x *GrpcColoredRectangle) GetLength() float64 {
	if x != nil {
		return x.Length
	}
	return 0
}

type GrpcEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnumType string `protobuf:"bytes,1,opt,name=enumType,proto3" json:"enumType,omitempty"`
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GrpcEnum) Reset() {
	*x = GrpcEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcEnum) ProtoMessage() {}

func (x *GrpcEnum) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcEnum.ProtoReflect.Descriptor instead.
func (*GrpcEnum) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{22}
}

func (x *GrpcEnum) GetEnumType() string {
	if x != nil {
		return x.EnumType
	}
	return ""
}

func (x *GrpcEnum) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GrpcEventLogInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventsCount       uint32 `protobuf:"varint,1,opt,name=events_count,json=eventsCount,proto3" json:"events_count,omitempty"`
	TracesCount       uint32 `protobuf:"varint,2,opt,name=traces_count,json=tracesCount,proto3" json:"traces_count,omitempty"`
	EventClassesCount uint32 `protobuf:"varint,3,opt,name=event_classes_count,json=eventClassesCount,proto3" json:"event_classes_count,omitempty"`
}

func (x *GrpcEventLogInfo) Reset() {
	*x = GrpcEventLogInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcEventLogInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcEventLogInfo) ProtoMessage() {}

func (x *GrpcEventLogInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcEventLogInfo.ProtoReflect.Descriptor instead.
func (*GrpcEventLogInfo) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{23}
}

func (x *GrpcEventLogInfo) GetEventsCount() uint32 {
	if x != nil {
		return x.EventsCount
	}
	return 0
}

func (x *GrpcEventLogInfo) GetTracesCount() uint32 {
	if x != nil {
		return x.TracesCount
	}
	return 0
}

func (x *GrpcEventLogInfo) GetEventClassesCount() uint32 {
	if x != nil {
		return x.EventClassesCount
	}
	return 0
}

type GrpcStrings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Strings []string `protobuf:"bytes,1,rep,name=strings,proto3" json:"strings,omitempty"`
}

func (x *GrpcStrings) Reset() {
	*x = GrpcStrings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcStrings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcStrings) ProtoMessage() {}

func (x *GrpcStrings) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcStrings.ProtoReflect.Descriptor instead.
func (*GrpcStrings) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{24}
}

func (x *GrpcStrings) GetStrings() []string {
	if x != nil {
		return x.Strings
	}
	return nil
}

type GrpcPipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parts []*GrpcPipelinePartBase `protobuf:"bytes,1,rep,name=parts,proto3" json:"parts,omitempty"`
}

func (x *GrpcPipeline) Reset() {
	*x = GrpcPipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcPipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcPipeline) ProtoMessage() {}

func (x *GrpcPipeline) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcPipeline.ProtoReflect.Descriptor instead.
func (*GrpcPipeline) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{25}
}

func (x *GrpcPipeline) GetParts() []*GrpcPipelinePartBase {
	if x != nil {
		return x.Parts
	}
	return nil
}

type GrpcPipelinePartBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Part:
	//
	//	*GrpcPipelinePartBase_DefaultPart
	//	*GrpcPipelinePartBase_ParallelPart
	//	*GrpcPipelinePartBase_SimpleContextRequestPart
	//	*GrpcPipelinePartBase_ComplexContextRequestPart
	Part isGrpcPipelinePartBase_Part `protobuf_oneof:"part"`
}

func (x *GrpcPipelinePartBase) Reset() {
	*x = GrpcPipelinePartBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcPipelinePartBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcPipelinePartBase) ProtoMessage() {}

func (x *GrpcPipelinePartBase) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcPipelinePartBase.ProtoReflect.Descriptor instead.
func (*GrpcPipelinePartBase) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{26}
}

func (m *GrpcPipelinePartBase) GetPart() isGrpcPipelinePartBase_Part {
	if m != nil {
		return m.Part
	}
	return nil
}

func (x *GrpcPipelinePartBase) GetDefaultPart() *GrpcPipelinePart {
	if x, ok := x.GetPart().(*GrpcPipelinePartBase_DefaultPart); ok {
		return x.DefaultPart
	}
	return nil
}

func (x *GrpcPipelinePartBase) GetParallelPart() *GrpcParallelPipelinePart {
	if x, ok := x.GetPart().(*GrpcPipelinePartBase_ParallelPart); ok {
		return x.ParallelPart
	}
	return nil
}

func (x *GrpcPipelinePartBase) GetSimpleContextRequestPart() *GrpcSimpleContextRequestPipelinePart {
	if x, ok := x.GetPart().(*GrpcPipelinePartBase_SimpleContextRequestPart); ok {
		return x.SimpleContextRequestPart
	}
	return nil
}

func (x *GrpcPipelinePartBase) GetComplexContextRequestPart() *GrpcComplexContextRequestPipelinePart {
	if x, ok := x.GetPart().(*GrpcPipelinePartBase_ComplexContextRequestPart); ok {
		return x.ComplexContextRequestPart
	}
	return nil
}

type isGrpcPipelinePartBase_Part interface {
	isGrpcPipelinePartBase_Part()
}

type GrpcPipelinePartBase_DefaultPart struct {
	DefaultPart *GrpcPipelinePart `protobuf:"bytes,1,opt,name=defaultPart,proto3,oneof"`
}

type GrpcPipelinePartBase_ParallelPart struct {
	ParallelPart *GrpcParallelPipelinePart `protobuf:"bytes,2,opt,name=parallelPart,proto3,oneof"`
}

type GrpcPipelinePartBase_SimpleContextRequestPart struct {
	SimpleContextRequestPart *GrpcSimpleContextRequestPipelinePart `protobuf:"bytes,3,opt,name=simpleContextRequestPart,proto3,oneof"`
}

type GrpcPipelinePartBase_ComplexContextRequestPart struct {
	ComplexContextRequestPart *GrpcComplexContextRequestPipelinePart `protobuf:"bytes,4,opt,name=complexContextRequestPart,proto3,oneof"`
}

func (*GrpcPipelinePartBase_DefaultPart) isGrpcPipelinePartBase_Part() {}

func (*GrpcPipelinePartBase_ParallelPart) isGrpcPipelinePartBase_Part() {}

func (*GrpcPipelinePartBase_SimpleContextRequestPart) isGrpcPipelinePartBase_Part() {}

func (*GrpcPipelinePartBase_ComplexContextRequestPart) isGrpcPipelinePartBase_Part() {}

type GrpcPipelinePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Configuration *GrpcPipelinePartConfiguration `protobuf:"bytes,2,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *GrpcPipelinePart) Reset() {
	*x = GrpcPipelinePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcPipelinePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcPipelinePart) ProtoMessage() {}

func (x *GrpcPipelinePart) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcPipelinePart.ProtoReflect.Descriptor instead.
func (*GrpcPipelinePart) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{27}
}

func (x *GrpcPipelinePart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GrpcPipelinePart) GetConfiguration() *GrpcPipelinePartConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type GrpcPipelinePartConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigurationParameters []*GrpcContextKeyValue `protobuf:"bytes,1,rep,name=configurationParameters,proto3" json:"configurationParameters,omitempty"`
}

func (x *GrpcPipelinePartConfiguration) Reset() {
	*x = GrpcPipelinePartConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcPipelinePartConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcPipelinePartConfiguration) ProtoMessage() {}

func (x *GrpcPipelinePartConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcPipelinePartConfiguration.ProtoReflect.Descriptor instead.
func (*GrpcPipelinePartConfiguration) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{28}
}

func (x *GrpcPipelinePartConfiguration) GetConfigurationParameters() []*GrpcContextKeyValue {
	if x != nil {
		return x.ConfigurationParameters
	}
	return nil
}

type GrpcParallelPipelinePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineParts []*GrpcPipelinePartBase `protobuf:"bytes,1,rep,name=pipelineParts,proto3" json:"pipelineParts,omitempty"`
}

func (x *GrpcParallelPipelinePart) Reset() {
	*x = GrpcParallelPipelinePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcParallelPipelinePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcParallelPipelinePart) ProtoMessage() {}

func (x *GrpcParallelPipelinePart) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcParallelPipelinePart.ProtoReflect.Descriptor instead.
func (*GrpcParallelPipelinePart) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{29}
}

func (x *GrpcParallelPipelinePart) GetPipelineParts() []*GrpcPipelinePartBase {
	if x != nil {
		return x.PipelineParts
	}
	return nil
}

type GrpcParallelPipelineParts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pipeline []*GrpcParallelPipelinePart `protobuf:"bytes,1,rep,name=pipeline,proto3" json:"pipeline,omitempty"`
}

func (x *GrpcParallelPipelineParts) Reset() {
	*x = GrpcParallelPipelineParts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcParallelPipelineParts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcParallelPipelineParts) ProtoMessage() {}

func (x *GrpcParallelPipelineParts) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcParallelPipelineParts.ProtoReflect.Descriptor instead.
func (*GrpcParallelPipelineParts) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{30}
}

func (x *GrpcParallelPipelineParts) GetPipeline() []*GrpcParallelPipelinePart {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

type GrpcSimpleContextRequestPipelinePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key                      *GrpcContextKey `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	FrontendPartUuid         *GrpcUuid       `protobuf:"bytes,2,opt,name=frontendPartUuid,proto3" json:"frontendPartUuid,omitempty"`
	FrontendPipelinePartName string          `protobuf:"bytes,3,opt,name=frontendPipelinePartName,proto3" json:"frontendPipelinePartName,omitempty"`
}

func (x *GrpcSimpleContextRequestPipelinePart) Reset() {
	*x = GrpcSimpleContextRequestPipelinePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcSimpleContextRequestPipelinePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcSimpleContextRequestPipelinePart) ProtoMessage() {}

func (x *GrpcSimpleContextRequestPipelinePart) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcSimpleContextRequestPipelinePart.ProtoReflect.Descriptor instead.
func (*GrpcSimpleContextRequestPipelinePart) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{31}
}

func (x *GrpcSimpleContextRequestPipelinePart) GetKey() *GrpcContextKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *GrpcSimpleContextRequestPipelinePart) GetFrontendPartUuid() *GrpcUuid {
	if x != nil {
		return x.FrontendPartUuid
	}
	return nil
}

func (x *GrpcSimpleContextRequestPipelinePart) GetFrontendPipelinePartName() string {
	if x != nil {
		return x.FrontendPipelinePartName
	}
	return ""
}

type GrpcComplexContextRequestPipelinePart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys                     []*GrpcContextKey `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	BeforePipelinePart       *GrpcPipelinePart `protobuf:"bytes,2,opt,name=beforePipelinePart,proto3" json:"beforePipelinePart,omitempty"`
	FrontendPartUuid         *GrpcUuid         `protobuf:"bytes,3,opt,name=frontendPartUuid,proto3" json:"frontendPartUuid,omitempty"`
	FrontendPipelinePartName string            `protobuf:"bytes,4,opt,name=frontendPipelinePartName,proto3" json:"frontendPipelinePartName,omitempty"`
}

func (x *GrpcComplexContextRequestPipelinePart) Reset() {
	*x = GrpcComplexContextRequestPipelinePart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcComplexContextRequestPipelinePart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcComplexContextRequestPipelinePart) ProtoMessage() {}

func (x *GrpcComplexContextRequestPipelinePart) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcComplexContextRequestPipelinePart.ProtoReflect.Descriptor instead.
func (*GrpcComplexContextRequestPipelinePart) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{32}
}

func (x *GrpcComplexContextRequestPipelinePart) GetKeys() []*GrpcContextKey {
	if x != nil {
		return x.Keys
	}
	return nil
}

func (x *GrpcComplexContextRequestPipelinePart) GetBeforePipelinePart() *GrpcPipelinePart {
	if x != nil {
		return x.BeforePipelinePart
	}
	return nil
}

func (x *GrpcComplexContextRequestPipelinePart) GetFrontendPartUuid() *GrpcUuid {
	if x != nil {
		return x.FrontendPartUuid
	}
	return nil
}

func (x *GrpcComplexContextRequestPipelinePart) GetFrontendPipelinePartName() string {
	if x != nil {
		return x.FrontendPipelinePartName
	}
	return ""
}

type GrpcGraph struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*GrpcGraphNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges []*GrpcGraphEdge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
	Kind  GrpcGraphKind    `protobuf:"varint,3,opt,name=kind,proto3,enum=ficus.GrpcGraphKind" json:"kind,omitempty"`
}

func (x *GrpcGraph) Reset() {
	*x = GrpcGraph{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcGraph) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcGraph) ProtoMessage() {}

func (x *GrpcGraph) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcGraph.ProtoReflect.Descriptor instead.
func (*GrpcGraph) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{33}
}

func (x *GrpcGraph) GetNodes() []*GrpcGraphNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GrpcGraph) GetEdges() []*GrpcGraphEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

func (x *GrpcGraph) GetKind() GrpcGraphKind {
	if x != nil {
		return x.Kind
	}
	return GrpcGraphKind_None
}

type GrpcGraphNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data           string                    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	AdditionalData []*GrpcNodeAdditionalData `protobuf:"bytes,3,rep,name=additional_data,json=additionalData,proto3" json:"additional_data,omitempty"`
	InnerGraph     *GrpcGraph                `protobuf:"bytes,4,opt,name=inner_graph,json=innerGraph,proto3" json:"inner_graph,omitempty"`
}

func (x *GrpcGraphNode) Reset() {
	*x = GrpcGraphNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcGraphNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcGraphNode) ProtoMessage() {}

func (x *GrpcGraphNode) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcGraphNode.ProtoReflect.Descriptor instead.
func (*GrpcGraphNode) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{34}
}

func (x *GrpcGraphNode) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GrpcGraphNode) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *GrpcGraphNode) GetAdditionalData() []*GrpcNodeAdditionalData {
	if x != nil {
		return x.AdditionalData
	}
	return nil
}

func (x *GrpcGraphNode) GetInnerGraph() *GrpcGraph {
	if x != nil {
		return x.InnerGraph
	}
	return nil
}

type GrpcNodeAdditionalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*GrpcNodeAdditionalData_None
	//	*GrpcNodeAdditionalData_SoftwareData
	//	*GrpcNodeAdditionalData_PatternInfo
	//	*GrpcNodeAdditionalData_TraceData
	//	*GrpcNodeAdditionalData_TimeData
	//	*GrpcNodeAdditionalData_MultithreadedFragment
	Data isGrpcNodeAdditionalData_Data `protobuf_oneof:"data"`
	// we need to understand from where the node data came from the original event log
	OriginalEventCoordinates *GrpcEventCoordinates `protobuf:"bytes,6,opt,name=original_event_coordinates,json=originalEventCoordinates,proto3" json:"original_event_coordinates,omitempty"`
}

func (x *GrpcNodeAdditionalData) Reset() {
	*x = GrpcNodeAdditionalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcNodeAdditionalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcNodeAdditionalData) ProtoMessage() {}

func (x *GrpcNodeAdditionalData) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcNodeAdditionalData.ProtoReflect.Descriptor instead.
func (*GrpcNodeAdditionalData) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{35}
}

func (m *GrpcNodeAdditionalData) GetData() isGrpcNodeAdditionalData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *GrpcNodeAdditionalData) GetNone() *emptypb.Empty {
	if x, ok := x.GetData().(*GrpcNodeAdditionalData_None); ok {
		return x.None
	}
	return nil
}

func (x *GrpcNodeAdditionalData) GetSoftwareData() *GrpcSoftwareData {
	if x, ok := x.GetData().(*GrpcNodeAdditionalData_SoftwareData); ok {
		return x.SoftwareData
	}
	return nil
}

func (x *GrpcNodeAdditionalData) GetPatternInfo() *GrpcUnderlyingPatternInfo {
	if x, ok := x.GetData().(*GrpcNodeAdditionalData_PatternInfo); ok {
		return x.PatternInfo
	}
	return nil
}

func (x *GrpcNodeAdditionalData) GetTraceData() *GrpcNodeCorrespondingTraceData {
	if x, ok := x.GetData().(*GrpcNodeAdditionalData_TraceData); ok {
		return x.TraceData
	}
	return nil
}

func (x *GrpcNodeAdditionalData) GetTimeData() *GrpcActivityStartEndData {
	if x, ok := x.GetData().(*GrpcNodeAdditionalData_TimeData); ok {
		return x.TimeData
	}
	return nil
}

func (x *GrpcNodeAdditionalData) GetMultithreadedFragment() *GrpcMultithreadedFragment {
	if x, ok := x.GetData().(*GrpcNodeAdditionalData_MultithreadedFragment); ok {
		return x.MultithreadedFragment
	}
	return nil
}

func (x *GrpcNodeAdditionalData) GetOriginalEventCoordinates() *GrpcEventCoordinates {
	if x != nil {
		return x.OriginalEventCoordinates
	}
	return nil
}

type isGrpcNodeAdditionalData_Data interface {
	isGrpcNodeAdditionalData_Data()
}

type GrpcNodeAdditionalData_None struct {
	None *emptypb.Empty `protobuf:"bytes,1,opt,name=none,proto3,oneof"`
}

type GrpcNodeAdditionalData_SoftwareData struct {
	SoftwareData *GrpcSoftwareData `protobuf:"bytes,2,opt,name=software_data,json=softwareData,proto3,oneof"`
}

type GrpcNodeAdditionalData_PatternInfo struct {
	PatternInfo *GrpcUnderlyingPatternInfo `protobuf:"bytes,3,opt,name=pattern_info,json=patternInfo,proto3,oneof"`
}

type GrpcNodeAdditionalData_TraceData struct {
	TraceData *GrpcNodeCorrespondingTraceData `protobuf:"bytes,4,opt,name=trace_data,json=traceData,proto3,oneof"`
}

type GrpcNodeAdditionalData_TimeData struct {
	TimeData *GrpcActivityStartEndData `protobuf:"bytes,5,opt,name=time_data,json=timeData,proto3,oneof"`
}

type GrpcNodeAdditionalData_MultithreadedFragment struct {
	MultithreadedFragment *GrpcMultithreadedFragment `protobuf:"bytes,7,opt,name=multithreaded_fragment,json=multithreadedFragment,proto3,oneof"`
}

func (*GrpcNodeAdditionalData_None) isGrpcNodeAdditionalData_Data() {}

func (*GrpcNodeAdditionalData_SoftwareData) isGrpcNodeAdditionalData_Data() {}

func (*GrpcNodeAdditionalData_PatternInfo) isGrpcNodeAdditionalData_Data() {}

func (*GrpcNodeAdditionalData_TraceData) isGrpcNodeAdditionalData_Data() {}

func (*GrpcNodeAdditionalData_TimeData) isGrpcNodeAdditionalData_Data() {}

func (*GrpcNodeAdditionalData_MultithreadedFragment) isGrpcNodeAdditionalData_Data() {}

type GrpcMultithreadedFragment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MultithreadedLog *GrpcSimpleEventLog `protobuf:"bytes,1,opt,name=multithreaded_log,json=multithreadedLog,proto3" json:"multithreaded_log,omitempty"`
}

func (x *GrpcMultithreadedFragment) Reset() {
	*x = GrpcMultithreadedFragment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcMultithreadedFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcMultithreadedFragment) ProtoMessage() {}

func (x *GrpcMultithreadedFragment) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcMultithreadedFragment.ProtoReflect.Descriptor instead.
func (*GrpcMultithreadedFragment) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{36}
}

func (x *GrpcMultithreadedFragment) GetMultithreadedLog() *GrpcSimpleEventLog {
	if x != nil {
		return x.MultithreadedLog
	}
	return nil
}

type GrpcActivityStartEndData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTime int64 `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime   int64 `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
}

func (x *GrpcActivityStartEndData) Reset() {
	*x = GrpcActivityStartEndData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcActivityStartEndData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcActivityStartEndData) ProtoMessage() {}

func (x *GrpcActivityStartEndData) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcActivityStartEndData.ProtoReflect.Descriptor instead.
func (*GrpcActivityStartEndData) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{37}
}

func (x *GrpcActivityStartEndData) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *GrpcActivityStartEndData) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type GrpcEventCoordinates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId    uint64 `protobuf:"varint,2,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	EventIndex uint64 `protobuf:"varint,3,opt,name=event_index,json=eventIndex,proto3" json:"event_index,omitempty"`
}

func (x *GrpcEventCoordinates) Reset() {
	*x = GrpcEventCoordinates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcEventCoordinates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcEventCoordinates) ProtoMessage() {}

func (x *GrpcEventCoordinates) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcEventCoordinates.ProtoReflect.Descriptor instead.
func (*GrpcEventCoordinates) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{38}
}

func (x *GrpcEventCoordinates) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

func (x *GrpcEventCoordinates) GetEventIndex() uint64 {
	if x != nil {
		return x.EventIndex
	}
	return 0
}

type GrpcNodeCorrespondingTraceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BelongsToRootSequence bool `protobuf:"varint,1,opt,name=belongs_to_root_sequence,json=belongsToRootSequence,proto3" json:"belongs_to_root_sequence,omitempty"`
}

func (x *GrpcNodeCorrespondingTraceData) Reset() {
	*x = GrpcNodeCorrespondingTraceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcNodeCorrespondingTraceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcNodeCorrespondingTraceData) ProtoMessage() {}

func (x *GrpcNodeCorrespondingTraceData) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcNodeCorrespondingTraceData.ProtoReflect.Descriptor instead.
func (*GrpcNodeCorrespondingTraceData) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{39}
}

func (x *GrpcNodeCorrespondingTraceData) GetBelongsToRootSequence() bool {
	if x != nil {
		return x.BelongsToRootSequence
	}
	return false
}

type GrpcSoftwareData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Histogram               []*GrpcHistogramEntry        `protobuf:"bytes,1,rep,name=histogram,proto3" json:"histogram,omitempty"`
	TimelineDiagramFragment *GrpcTimelineDiagramFragment `protobuf:"bytes,2,opt,name=timeline_diagram_fragment,json=timelineDiagramFragment,proto3" json:"timeline_diagram_fragment,omitempty"`
	HistogramData           []*GrpcGeneralHistogramData  `protobuf:"bytes,13,rep,name=histogram_data,json=histogramData,proto3" json:"histogram_data,omitempty"`
	SimpleCounterData       []*GrpcSimpleCounterData     `protobuf:"bytes,14,rep,name=simple_counter_data,json=simpleCounterData,proto3" json:"simple_counter_data,omitempty"`
	ActivitiesDurationsData []*GrpcActivityDurationData  `protobuf:"bytes,15,rep,name=activities_durations_data,json=activitiesDurationsData,proto3" json:"activities_durations_data,omitempty"`
}

func (x *GrpcSoftwareData) Reset() {
	*x = GrpcSoftwareData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcSoftwareData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcSoftwareData) ProtoMessage() {}

func (x *GrpcSoftwareData) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcSoftwareData.ProtoReflect.Descriptor instead.
func (*GrpcSoftwareData) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{40}
}

func (x *GrpcSoftwareData) GetHistogram() []*GrpcHistogramEntry {
	if x != nil {
		return x.Histogram
	}
	return nil
}

func (x *GrpcSoftwareData) GetTimelineDiagramFragment() *GrpcTimelineDiagramFragment {
	if x != nil {
		return x.TimelineDiagramFragment
	}
	return nil
}

func (x *GrpcSoftwareData) GetHistogramData() []*GrpcGeneralHistogramData {
	if x != nil {
		return x.HistogramData
	}
	return nil
}

func (x *GrpcSoftwareData) GetSimpleCounterData() []*GrpcSimpleCounterData {
	if x != nil {
		return x.SimpleCounterData
	}
	return nil
}

func (x *GrpcSoftwareData) GetActivitiesDurationsData() []*GrpcActivityDurationData {
	if x != nil {
		return x.ActivitiesDurationsData
	}
	return nil
}

type GrpcActivityDurationData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base     *GrpcGenericEnhancementBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Duration uint64                      `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Kind     GrpcDurationKind            `protobuf:"varint,3,opt,name=kind,proto3,enum=ficus.GrpcDurationKind" json:"kind,omitempty"`
}

func (x *GrpcActivityDurationData) Reset() {
	*x = GrpcActivityDurationData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcActivityDurationData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcActivityDurationData) ProtoMessage() {}

func (x *GrpcActivityDurationData) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcActivityDurationData.ProtoReflect.Descriptor instead.
func (*GrpcActivityDurationData) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{41}
}

func (x *GrpcActivityDurationData) GetBase() *GrpcGenericEnhancementBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GrpcActivityDurationData) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *GrpcActivityDurationData) GetKind() GrpcDurationKind {
	if x != nil {
		return x.Kind
	}
	return GrpcDurationKind_Unspecified
}

type GrpcGenericEnhancementBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Units string  `protobuf:"bytes,2,opt,name=units,proto3" json:"units,omitempty"`
	Group *string `protobuf:"bytes,3,opt,name=group,proto3,oneof" json:"group,omitempty"`
}

func (x *GrpcGenericEnhancementBase) Reset() {
	*x = GrpcGenericEnhancementBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcGenericEnhancementBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcGenericEnhancementBase) ProtoMessage() {}

func (x *GrpcGenericEnhancementBase) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcGenericEnhancementBase.ProtoReflect.Descriptor instead.
func (*GrpcGenericEnhancementBase) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{42}
}

func (x *GrpcGenericEnhancementBase) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GrpcGenericEnhancementBase) GetUnits() string {
	if x != nil {
		return x.Units
	}
	return ""
}

func (x *GrpcGenericEnhancementBase) GetGroup() string {
	if x != nil && x.Group != nil {
		return *x.Group
	}
	return ""
}

type GrpcGeneralHistogramData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base    *GrpcGenericEnhancementBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Entries []*GrpcHistogramEntry       `protobuf:"bytes,2,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *GrpcGeneralHistogramData) Reset() {
	*x = GrpcGeneralHistogramData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcGeneralHistogramData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcGeneralHistogramData) ProtoMessage() {}

func (x *GrpcGeneralHistogramData) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcGeneralHistogramData.ProtoReflect.Descriptor instead.
func (*GrpcGeneralHistogramData) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{43}
}

func (x *GrpcGeneralHistogramData) GetBase() *GrpcGenericEnhancementBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GrpcGeneralHistogramData) GetEntries() []*GrpcHistogramEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type GrpcSimpleCounterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base  *GrpcGenericEnhancementBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Count float64                     `protobuf:"fixed64,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GrpcSimpleCounterData) Reset() {
	*x = GrpcSimpleCounterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcSimpleCounterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcSimpleCounterData) ProtoMessage() {}

func (x *GrpcSimpleCounterData) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcSimpleCounterData.ProtoReflect.Descriptor instead.
func (*GrpcSimpleCounterData) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{44}
}

func (x *GrpcSimpleCounterData) GetBase() *GrpcGenericEnhancementBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *GrpcSimpleCounterData) GetCount() float64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GrpcMethodInliningInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InlineeInfo *GrpcMethodNameParts `protobuf:"bytes,1,opt,name=inlinee_info,json=inlineeInfo,proto3" json:"inlinee_info,omitempty"`
	InlinerInfo *GrpcMethodNameParts `protobuf:"bytes,2,opt,name=inliner_info,json=inlinerInfo,proto3" json:"inliner_info,omitempty"`
}

func (x *GrpcMethodInliningInfo) Reset() {
	*x = GrpcMethodInliningInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcMethodInliningInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcMethodInliningInfo) ProtoMessage() {}

func (x *GrpcMethodInliningInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcMethodInliningInfo.ProtoReflect.Descriptor instead.
func (*GrpcMethodInliningInfo) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{45}
}

func (x *GrpcMethodInliningInfo) GetInlineeInfo() *GrpcMethodNameParts {
	if x != nil {
		return x.InlineeInfo
	}
	return nil
}

func (x *GrpcMethodInliningInfo) GetInlinerInfo() *GrpcMethodNameParts {
	if x != nil {
		return x.InlinerInfo
	}
	return nil
}

type GrpcMethodNameParts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace string `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Signature string `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *GrpcMethodNameParts) Reset() {
	*x = GrpcMethodNameParts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcMethodNameParts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcMethodNameParts) ProtoMessage() {}

func (x *GrpcMethodNameParts) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcMethodNameParts.ProtoReflect.Descriptor instead.
func (*GrpcMethodNameParts) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{46}
}

func (x *GrpcMethodNameParts) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GrpcMethodNameParts) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GrpcMethodNameParts) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

type GrpcHistogramEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count float64 `protobuf:"fixed64,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *GrpcHistogramEntry) Reset() {
	*x = GrpcHistogramEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcHistogramEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcHistogramEntry) ProtoMessage() {}

func (x *GrpcHistogramEntry) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcHistogramEntry.ProtoReflect.Descriptor instead.
func (*GrpcHistogramEntry) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{47}
}

func (x *GrpcHistogramEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GrpcHistogramEntry) GetCount() float64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GrpcTimelineDiagramFragment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threads []*GrpcThread `protobuf:"bytes,1,rep,name=threads,proto3" json:"threads,omitempty"`
}

func (x *GrpcTimelineDiagramFragment) Reset() {
	*x = GrpcTimelineDiagramFragment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcTimelineDiagramFragment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcTimelineDiagramFragment) ProtoMessage() {}

func (x *GrpcTimelineDiagramFragment) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcTimelineDiagramFragment.ProtoReflect.Descriptor instead.
func (*GrpcTimelineDiagramFragment) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{48}
}

func (x *GrpcTimelineDiagramFragment) GetThreads() []*GrpcThread {
	if x != nil {
		return x.Threads
	}
	return nil
}

type GrpcAllocationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName              string `protobuf:"bytes,1,opt,name=type_name,json=typeName,proto3" json:"type_name,omitempty"`
	AllocatedObjectsCount uint64 `protobuf:"varint,2,opt,name=allocated_objects_count,json=allocatedObjectsCount,proto3" json:"allocated_objects_count,omitempty"`
	AllocatedBytes        uint64 `protobuf:"varint,3,opt,name=allocated_bytes,json=allocatedBytes,proto3" json:"allocated_bytes,omitempty"`
}

func (x *GrpcAllocationInfo) Reset() {
	*x = GrpcAllocationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcAllocationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcAllocationInfo) ProtoMessage() {}

func (x *GrpcAllocationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcAllocationInfo.ProtoReflect.Descriptor instead.
func (*GrpcAllocationInfo) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{49}
}

func (x *GrpcAllocationInfo) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *GrpcAllocationInfo) GetAllocatedObjectsCount() uint64 {
	if x != nil {
		return x.AllocatedObjectsCount
	}
	return 0
}

func (x *GrpcAllocationInfo) GetAllocatedBytes() uint64 {
	if x != nil {
		return x.AllocatedBytes
	}
	return 0
}

type GrpcUnderlyingPatternInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PatternKind  GrpcUnderlyingPatternKind `protobuf:"varint,1,opt,name=pattern_kind,json=patternKind,proto3,enum=ficus.GrpcUnderlyingPatternKind" json:"pattern_kind,omitempty"`
	BaseSequence []string                  `protobuf:"bytes,2,rep,name=base_sequence,json=baseSequence,proto3" json:"base_sequence,omitempty"`
	Graph        *GrpcGraph                `protobuf:"bytes,3,opt,name=graph,proto3" json:"graph,omitempty"`
}

func (x *GrpcUnderlyingPatternInfo) Reset() {
	*x = GrpcUnderlyingPatternInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcUnderlyingPatternInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcUnderlyingPatternInfo) ProtoMessage() {}

func (x *GrpcUnderlyingPatternInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcUnderlyingPatternInfo.ProtoReflect.Descriptor instead.
func (*GrpcUnderlyingPatternInfo) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{50}
}

func (x *GrpcUnderlyingPatternInfo) GetPatternKind() GrpcUnderlyingPatternKind {
	if x != nil {
		return x.PatternKind
	}
	return GrpcUnderlyingPatternKind_StrictLoop
}

func (x *GrpcUnderlyingPatternInfo) GetBaseSequence() []string {
	if x != nil {
		return x.BaseSequence
	}
	return nil
}

func (x *GrpcUnderlyingPatternInfo) GetGraph() *GrpcGraph {
	if x != nil {
		return x.Graph
	}
	return nil
}

type GrpcGraphEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FromNode       uint64                         `protobuf:"varint,2,opt,name=from_node,json=fromNode,proto3" json:"from_node,omitempty"`
	ToNode         uint64                         `protobuf:"varint,3,opt,name=to_node,json=toNode,proto3" json:"to_node,omitempty"`
	Weight         float64                        `protobuf:"fixed64,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Data           string                         `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	AdditionalData []*GrpcGraphEdgeAdditionalData `protobuf:"bytes,6,rep,name=additional_data,json=additionalData,proto3" json:"additional_data,omitempty"`
}

func (x *GrpcGraphEdge) Reset() {
	*x = GrpcGraphEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcGraphEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcGraphEdge) ProtoMessage() {}

func (x *GrpcGraphEdge) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcGraphEdge.ProtoReflect.Descriptor instead.
func (*GrpcGraphEdge) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{51}
}

func (x *GrpcGraphEdge) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GrpcGraphEdge) GetFromNode() uint64 {
	if x != nil {
		return x.FromNode
	}
	return 0
}

func (x *GrpcGraphEdge) GetToNode() uint64 {
	if x != nil {
		return x.ToNode
	}
	return 0
}

func (x *GrpcGraphEdge) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *GrpcGraphEdge) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *GrpcGraphEdge) GetAdditionalData() []*GrpcGraphEdgeAdditionalData {
	if x != nil {
		return x.AdditionalData
	}
	return nil
}

type GrpcGraphEdgeAdditionalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*GrpcGraphEdgeAdditionalData_SoftwareData
	//	*GrpcGraphEdgeAdditionalData_ExecutionInfo
	//	*GrpcGraphEdgeAdditionalData_TimeData
	Data isGrpcGraphEdgeAdditionalData_Data `protobuf_oneof:"data"`
}

func (x *GrpcGraphEdgeAdditionalData) Reset() {
	*x = GrpcGraphEdgeAdditionalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcGraphEdgeAdditionalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcGraphEdgeAdditionalData) ProtoMessage() {}

func (x *GrpcGraphEdgeAdditionalData) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcGraphEdgeAdditionalData.ProtoReflect.Descriptor instead.
func (*GrpcGraphEdgeAdditionalData) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{52}
}

func (m *GrpcGraphEdgeAdditionalData) GetData() isGrpcGraphEdgeAdditionalData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *GrpcGraphEdgeAdditionalData) GetSoftwareData() *GrpcSoftwareData {
	if x, ok := x.GetData().(*GrpcGraphEdgeAdditionalData_SoftwareData); ok {
		return x.SoftwareData
	}
	return nil
}

func (x *GrpcGraphEdgeAdditionalData) GetExecutionInfo() *GrpcEdgeExecutionInfo {
	if x, ok := x.GetData().(*GrpcGraphEdgeAdditionalData_ExecutionInfo); ok {
		return x.ExecutionInfo
	}
	return nil
}

func (x *GrpcGraphEdgeAdditionalData) GetTimeData() *GrpcActivityStartEndData {
	if x, ok := x.GetData().(*GrpcGraphEdgeAdditionalData_TimeData); ok {
		return x.TimeData
	}
	return nil
}

type isGrpcGraphEdgeAdditionalData_Data interface {
	isGrpcGraphEdgeAdditionalData_Data()
}

type GrpcGraphEdgeAdditionalData_SoftwareData struct {
	SoftwareData *GrpcSoftwareData `protobuf:"bytes,1,opt,name=software_data,json=softwareData,proto3,oneof"`
}

type GrpcGraphEdgeAdditionalData_ExecutionInfo struct {
	ExecutionInfo *GrpcEdgeExecutionInfo `protobuf:"bytes,2,opt,name=execution_info,json=executionInfo,proto3,oneof"`
}

type GrpcGraphEdgeAdditionalData_TimeData struct {
	TimeData *GrpcActivityStartEndData `protobuf:"bytes,3,opt,name=time_data,json=timeData,proto3,oneof"`
}

func (*GrpcGraphEdgeAdditionalData_SoftwareData) isGrpcGraphEdgeAdditionalData_Data() {}

func (*GrpcGraphEdgeAdditionalData_ExecutionInfo) isGrpcGraphEdgeAdditionalData_Data() {}

func (*GrpcGraphEdgeAdditionalData_TimeData) isGrpcGraphEdgeAdditionalData_Data() {}

type GrpcEdgeExecutionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TraceId uint64 `protobuf:"varint,1,opt,name=traceId,proto3" json:"traceId,omitempty"`
}

func (x *GrpcEdgeExecutionInfo) Reset() {
	*x = GrpcEdgeExecutionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcEdgeExecutionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcEdgeExecutionInfo) ProtoMessage() {}

func (x *GrpcEdgeExecutionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcEdgeExecutionInfo.ProtoReflect.Descriptor instead.
func (*GrpcEdgeExecutionInfo) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{53}
}

func (x *GrpcEdgeExecutionInfo) GetTraceId() uint64 {
	if x != nil {
		return x.TraceId
	}
	return 0
}

type GrpcBytes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bytes []byte `protobuf:"bytes,1,opt,name=bytes,proto3" json:"bytes,omitempty"`
}

func (x *GrpcBytes) Reset() {
	*x = GrpcBytes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcBytes) ProtoMessage() {}

func (x *GrpcBytes) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcBytes.ProtoReflect.Descriptor instead.
func (*GrpcBytes) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{54}
}

func (x *GrpcBytes) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

type GrpcLogTimelineDiagram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Traces []*GrpcTraceTimelineDiagram `protobuf:"bytes,1,rep,name=traces,proto3" json:"traces,omitempty"`
}

func (x *GrpcLogTimelineDiagram) Reset() {
	*x = GrpcLogTimelineDiagram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcLogTimelineDiagram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcLogTimelineDiagram) ProtoMessage() {}

func (x *GrpcLogTimelineDiagram) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcLogTimelineDiagram.ProtoReflect.Descriptor instead.
func (*GrpcLogTimelineDiagram) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{55}
}

func (x *GrpcLogTimelineDiagram) GetTraces() []*GrpcTraceTimelineDiagram {
	if x != nil {
		return x.Traces
	}
	return nil
}

type GrpcTimelineTraceEventsGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartPoint *GrpcLogPoint `protobuf:"bytes,1,opt,name=start_point,json=startPoint,proto3" json:"start_point,omitempty"`
	EndPoint   *GrpcLogPoint `protobuf:"bytes,2,opt,name=end_point,json=endPoint,proto3" json:"end_point,omitempty"`
}

func (x *GrpcTimelineTraceEventsGroup) Reset() {
	*x = GrpcTimelineTraceEventsGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcTimelineTraceEventsGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcTimelineTraceEventsGroup) ProtoMessage() {}

func (x *GrpcTimelineTraceEventsGroup) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcTimelineTraceEventsGroup.ProtoReflect.Descriptor instead.
func (*GrpcTimelineTraceEventsGroup) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{56}
}

func (x *GrpcTimelineTraceEventsGroup) GetStartPoint() *GrpcLogPoint {
	if x != nil {
		return x.StartPoint
	}
	return nil
}

func (x *GrpcTimelineTraceEventsGroup) GetEndPoint() *GrpcLogPoint {
	if x != nil {
		return x.EndPoint
	}
	return nil
}

type GrpcTraceTimelineDiagram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Threads      []*GrpcThread                   `protobuf:"bytes,1,rep,name=threads,proto3" json:"threads,omitempty"`
	EventsGroups []*GrpcTimelineTraceEventsGroup `protobuf:"bytes,2,rep,name=events_groups,json=eventsGroups,proto3" json:"events_groups,omitempty"`
}

func (x *GrpcTraceTimelineDiagram) Reset() {
	*x = GrpcTraceTimelineDiagram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcTraceTimelineDiagram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcTraceTimelineDiagram) ProtoMessage() {}

func (x *GrpcTraceTimelineDiagram) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcTraceTimelineDiagram.ProtoReflect.Descriptor instead.
func (*GrpcTraceTimelineDiagram) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{57}
}

func (x *GrpcTraceTimelineDiagram) GetThreads() []*GrpcThread {
	if x != nil {
		return x.Threads
	}
	return nil
}

func (x *GrpcTraceTimelineDiagram) GetEventsGroups() []*GrpcTimelineTraceEventsGroup {
	if x != nil {
		return x.EventsGroups
	}
	return nil
}

type GrpcThread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Events []*GrpcThreadEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *GrpcThread) Reset() {
	*x = GrpcThread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcThread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcThread) ProtoMessage() {}

func (x *GrpcThread) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcThread.ProtoReflect.Descriptor instead.
func (*GrpcThread) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{58}
}

func (x *GrpcThread) GetEvents() []*GrpcThreadEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

type GrpcThreadEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Stamp int64  `protobuf:"varint,2,opt,name=stamp,proto3" json:"stamp,omitempty"`
}

func (x *GrpcThreadEvent) Reset() {
	*x = GrpcThreadEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pipelines_and_context_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrpcThreadEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrpcThreadEvent) ProtoMessage() {}

func (x *GrpcThreadEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pipelines_and_context_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrpcThreadEvent.ProtoReflect.Descriptor instead.
func (*GrpcThreadEvent) Descriptor() ([]byte, []int) {
	return file_pipelines_and_context_proto_rawDescGZIP(), []int{59}
}

func (x *GrpcThreadEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GrpcThreadEvent) GetStamp() int64 {
	if x != nil {
		return x.Stamp
	}
	return 0
}

var File_pipelines_and_context_proto protoreflect.FileDescriptor

var file_pipelines_and_context_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x61, 0x6e, 0x64, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x66,
	0x69, 0x63, 0x75, 0x73, 0x1a, 0x0f, 0x70, 0x6d, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x74, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24,
	0x0a, 0x0e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0x67, 0x0a, 0x1b, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x57, 0x69, 0x74, 0x68, 0x4b, 0x65, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xea, 0x0a,
	0x0a, 0x10, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x18, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0a,
	0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x48, 0x61, 0x73,
	0x68, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x68, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x4c, 0x6f, 0x67, 0x12, 0x43, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x5f, 0x6c, 0x6f,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e,
	0x47, 0x72, 0x70, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x4c, 0x6f, 0x67, 0x12, 0x18, 0x0a, 0x06, 0x75, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x75, 0x69, 0x6e,
	0x74, 0x33, 0x32, 0x12, 0x5b, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x73, 0x75,
	0x62, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52,
	0x0f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x53, 0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73,
	0x12, 0x65, 0x0a, 0x16, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x5f,
	0x73, 0x75, 0x62, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2e, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x75, 0x62,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x13, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x75,
	0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x12, 0x14, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6c, 0x12, 0x4a, 0x0a,
	0x0d, 0x78, 0x65, 0x73, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70,
	0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x78, 0x65,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x73, 0x4c, 0x6f, 0x67, 0x12, 0x25, 0x0a, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63,
	0x45, 0x6e, 0x75, 0x6d, 0x48, 0x00, 0x52, 0x04, 0x65, 0x6e, 0x75, 0x6d, 0x12, 0x3f, 0x0a, 0x0e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70,
	0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52,
	0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a,
	0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x73, 0x48, 0x00, 0x52, 0x07, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x31, 0x0a,
	0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x31, 0x0a, 0x08, 0x70, 0x65, 0x74, 0x72, 0x69, 0x4e, 0x65, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50,
	0x65, 0x74, 0x72, 0x69, 0x4e, 0x65, 0x74, 0x48, 0x00, 0x52, 0x08, 0x70, 0x65, 0x74, 0x72, 0x69,
	0x4e, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47,
	0x72, 0x61, 0x70, 0x68, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x12, 0x16, 0x0a,
	0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x05,
	0x66, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x63, 0x75,
	0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0a, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e,
	0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x12, 0x44,
	0x0a, 0x0f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e,
	0x47, 0x72, 0x70, 0x63, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x4f,
	0x0a, 0x12, 0x6c, 0x6f, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x69, 0x61,
	0x67, 0x72, 0x61, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66, 0x69, 0x63,
	0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x4c, 0x6f, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x44, 0x69, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x48, 0x00, 0x52, 0x12, 0x6c, 0x6f, 0x67,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x69, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x12,
	0x38, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70,
	0x63, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x66,
	0x6c, 0x6f, 0x61, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x09, 0x69, 0x6e, 0x74,
	0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66,
	0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x49, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x35, 0x0a,
	0x0a, 0x75, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x55, 0x69,
	0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x48, 0x00, 0x52, 0x09, 0x75, 0x69, 0x6e, 0x74, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x26, 0x0a, 0x0e, 0x47, 0x72,
	0x70, 0x63, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x24, 0x0a, 0x0c, 0x47, 0x72, 0x70, 0x63, 0x49, 0x6e, 0x74, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x25, 0x0a, 0x0d, 0x47, 0x72, 0x70, 0x63,
	0x55, 0x69, 0x6e, 0x74, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x6d, 0x0a, 0x13, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4b, 0x65,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4d,
	0x0a, 0x1e, 0x47, 0x72, 0x70, 0x63, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x2b, 0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x4b, 0x0a,
	0x1d, 0x47, 0x72, 0x70, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2a,
	0x0a, 0x03, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x69,
	0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x22, 0x6f, 0x0a, 0x26, 0x47, 0x72,
	0x70, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53,
	0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x45, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x5f, 0x73,
	0x75, 0x62, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x53, 0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x73, 0x53, 0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x22, 0x3b, 0x0a, 0x11, 0x47,
	0x72, 0x70, 0x63, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x4d, 0x0a, 0x12, 0x47, 0x72, 0x70, 0x63,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x12, 0x37,
	0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x09, 0x73, 0x75,
	0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x22, 0x74, 0x0a, 0x1a, 0x47, 0x72, 0x70, 0x63, 0x53,
	0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x72, 0x72,
	0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x72, 0x61, 0x63, 0x65, 0x53, 0x75, 0x62, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x52, 0x08, 0x73, 0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x6b, 0x0a,
	0x27, 0x47, 0x72, 0x70, 0x63, 0x53, 0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f,
	0x61, 0x72, 0x72, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66,
	0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x75, 0x62, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x41, 0x72, 0x72, 0x61, 0x79, 0x73, 0x22, 0xc2, 0x01, 0x0a, 0x12, 0x47,
	0x72, 0x70, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x67, 0x12, 0x3a, 0x0a, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x2e, 0x0a,
	0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x4c, 0x6f, 0x67, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0xdf, 0x01, 0x0a, 0x17, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x4c, 0x6f,
	0x67, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x14, 0x72,
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x66, 0x69, 0x63, 0x75,
	0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x13, 0x72, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x41,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x59, 0x0a, 0x10, 0x61, 0x78, 0x69,
	0x73, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x4c, 0x6f, 0x67, 0x58, 0x41, 0x78, 0x69, 0x73, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x78, 0x69, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x42, 0x0b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xe6, 0x01, 0x0a, 0x20, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x37, 0x0a, 0x0d, 0x75, 0x70, 0x5f, 0x6c, 0x65, 0x66,
	0x74, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x4c, 0x6f, 0x67, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x0b, 0x75, 0x70, 0x4c, 0x65, 0x66, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x3d, 0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x69, 0x63, 0x75,
	0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x4c, 0x6f, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0e,
	0x64, 0x6f, 0x77, 0x6e, 0x52, 0x69, 0x67, 0x68, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x4a,
	0x0a, 0x22, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x5f, 0x6e, 0x65, 0x61, 0x72,
	0x65, 0x73, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x62, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x54, 0x6f, 0x4e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x56, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x61, 0x6c, 0x42, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x50, 0x0a, 0x0c, 0x47, 0x72,
	0x70, 0x63, 0x4c, 0x6f, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x49, 0x0a, 0x26,
	0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x4c, 0x6f, 0x67, 0x58, 0x41, 0x78,
	0x69, 0x73, 0x41, 0x66, 0x74, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x65, 0x41, 0x64, 0x6a, 0x75,
	0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x57, 0x0a, 0x19, 0x47, 0x72, 0x70, 0x63, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x4d, 0x61, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e,
	0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x22, 0x78, 0x0a, 0x0f, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x54, 0x72,
	0x61, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x69, 0x63, 0x75,
	0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x63,
	0x74, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x5f,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x63, 0x6f, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x57, 0x69, 0x64, 0x74, 0x68, 0x22, 0x68, 0x0a, 0x14, 0x47, 0x72,
	0x70, 0x63, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x65, 0x64, 0x52, 0x65, 0x63, 0x74, 0x61, 0x6e, 0x67,
	0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x72, 0x74, 0x58, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x6c, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x22, 0x3c, 0x0a, 0x08, 0x47, 0x72, 0x70, 0x63, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x75, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x10, 0x47, 0x72, 0x70, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x27, 0x0a,
	0x0b, 0x47, 0x72, 0x70, 0x63, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x41, 0x0a, 0x0c, 0x47, 0x72, 0x70, 0x63, 0x50, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72,
	0x70, 0x63, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x73, 0x22, 0xfb, 0x02, 0x0a, 0x14, 0x47, 0x72,
	0x70, 0x63, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e,
	0x47, 0x72, 0x70, 0x63, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x48, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x61, 0x72, 0x74, 0x12,
	0x45, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72,
	0x70, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c,
	0x65, 0x6c, 0x50, 0x61, 0x72, 0x74, 0x12, 0x69, 0x0a, 0x18, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x18, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72,
	0x74, 0x12, 0x6c, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70,
	0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x48, 0x00, 0x52, 0x19, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x74, 0x42,
	0x06, 0x0a, 0x04, 0x70, 0x61, 0x72, 0x74, 0x22, 0x72, 0x0a, 0x10, 0x47, 0x72, 0x70, 0x63, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x4a, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47,
	0x72, 0x70, 0x63, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x75, 0x0a, 0x1d, 0x47,
	0x72, 0x70, 0x63, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x17,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x4b, 0x65, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x22, 0x5d, 0x0a, 0x18, 0x47, 0x72, 0x70, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c,
	0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x12, 0x41,
	0x0a, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72,
	0x70, 0x63, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x0d, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x73, 0x22, 0x58, 0x0a, 0x19, 0x47, 0x72, 0x70, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65,
	0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x12, 0x3b,
	0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x50, 0x61, 0x72,
	0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x52, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0xc8, 0x01, 0x0a, 0x24,
	0x47, 0x72, 0x70, 0x63, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x12, 0x27, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x78, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a,
	0x10, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e,
	0x47, 0x72, 0x70, 0x63, 0x55, 0x75, 0x69, 0x64, 0x52, 0x10, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x18, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x66, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x94, 0x02, 0x0a, 0x25, 0x47, 0x72, 0x70, 0x63, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x78, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x12, 0x29, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x12, 0x47, 0x0a, 0x12, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e,
	0x47, 0x72, 0x70, 0x63, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74,
	0x52, 0x12, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x12, 0x3b, 0x0a, 0x10, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x55, 0x75, 0x69, 0x64, 0x52,
	0x10, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x55, 0x75, 0x69,
	0x64, 0x12, 0x3a, 0x0a, 0x18, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01,
	0x0a, 0x09, 0x47, 0x72, 0x70, 0x63, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x2a, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x69, 0x63,
	0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47,
	0x72, 0x70, 0x63, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05, 0x65, 0x64,
	0x67, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x72,
	0x61, 0x70, 0x68, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0xae, 0x01,
	0x0a, 0x0d, 0x47, 0x72, 0x70, 0x63, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x46, 0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x66,
	0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x61, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x0b, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x52, 0x0a, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x47, 0x72, 0x61, 0x70, 0x68, 0x22, 0x93,
	0x04, 0x0a, 0x16, 0x47, 0x72, 0x70, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x04, 0x6e, 0x6f, 0x6e,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x6f, 0x6e, 0x65, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x6f, 0x66, 0x74, 0x77,
	0x61, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x6f, 0x66, 0x74, 0x77,
	0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x6f, 0x66, 0x74, 0x77,
	0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c,
	0x79, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48,
	0x00, 0x52, 0x0b, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x46,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x25, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x4e,
	0x6f, 0x64, 0x65, 0x43, 0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x54, 0x72, 0x61, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x09, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x69, 0x63, 0x75,
	0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x45, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x74, 0x69,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x59, 0x0a, 0x16, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x74,
	0x68, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47,
	0x72, 0x70, 0x63, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64,
	0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x15, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x59, 0x0a, 0x1a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72,
	0x70, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x73, 0x52, 0x18, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x42, 0x06, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x19, 0x47, 0x72, 0x70, 0x63, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x46, 0x0a, 0x11, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x65, 0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66,
	0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x10, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x22, 0x54, 0x0a, 0x18, 0x47, 0x72, 0x70,
	0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x52, 0x0a, 0x14, 0x47, 0x72, 0x70, 0x63, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x59, 0x0a, 0x1e, 0x47, 0x72, 0x70, 0x63, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x6f, 0x72, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x18, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73,
	0x5f, 0x74, 0x6f, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x73,
	0x54, 0x6f, 0x52, 0x6f, 0x6f, 0x74, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x9e,
	0x03, 0x0a, 0x10, 0x47, 0x72, 0x70, 0x63, 0x53, 0x6f, 0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47,
	0x72, 0x70, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x09, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x5e, 0x0a, 0x19,
	0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x64, 0x69, 0x61, 0x67, 0x72, 0x61, 0x6d,
	0x5f, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x69, 0x6d, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x44, 0x69, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x46, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x17, 0x74, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x69, 0x61,
	0x67, 0x72, 0x61, 0x6d, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0e,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70,
	0x63, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x4c, 0x0a, 0x13, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x69,
	0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x11, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x5b, 0x0a, 0x19, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72,
	0x70, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x17, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69,
	0x65, 0x73, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x9a, 0x01, 0x0a, 0x18, 0x47, 0x72, 0x70, 0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69, 0x63,
	0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x6e,
	0x68, 0x61, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x6b, 0x0a, 0x1a,
	0x47, 0x72, 0x70, 0x63, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x68, 0x61, 0x6e,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x75,
	0x6e, 0x69, 0x74, 0x73, 0x12, 0x19, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x88, 0x01, 0x01, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x86, 0x01, 0x0a, 0x18, 0x47, 0x72,
	0x70, 0x63, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70,
	0x63, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69,
	0x65, 0x73, 0x22, 0x64, 0x0a, 0x15, 0x47, 0x72, 0x70, 0x63, 0x53, 0x69, 0x6d, 0x70, 0x6c, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x35, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x66, 0x69, 0x63, 0x75,
	0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x68,
	0x61, 0x6e, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x47, 0x72, 0x70,
	0x63, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0c, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x63, 0x75,
	0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x50, 0x61, 0x72, 0x74, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0c, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x50,
	0x61, 0x72, 0x74, 0x73, 0x52, 0x0b, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x65, 0x0a, 0x13, 0x47, 0x72, 0x70, 0x63, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x50, 0x61, 0x72, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x3e, 0x0a, 0x12, 0x47, 0x72, 0x70, 0x63,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4a, 0x0a, 0x1b, 0x47, 0x72, 0x70, 0x63,
	0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x44, 0x69, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x46,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x07, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x12, 0x47, 0x72, 0x70, 0x63, 0x41, 0x6c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x22, 0xad, 0x01, 0x0a, 0x19, 0x47, 0x72,
	0x70, 0x63, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x43, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x74, 0x65,
	0x72, 0x6e, 0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e,
	0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x55, 0x6e, 0x64, 0x65, 0x72, 0x6c,
	0x79, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x52,
	0x0b, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x26, 0x0a, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x52, 0x05, 0x67, 0x72, 0x61, 0x70, 0x68, 0x22, 0xce, 0x01, 0x0a, 0x0d, 0x47, 0x72,
	0x70, 0x63, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x64, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x6f, 0x4e, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x0a,
	0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47,
	0x72, 0x70, 0x63, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x64, 0x67, 0x65, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0xec, 0x01, 0x0a, 0x1b, 0x47,
	0x72, 0x70, 0x63, 0x47, 0x72, 0x61, 0x70, 0x68, 0x45, 0x64, 0x67, 0x65, 0x41, 0x64, 0x64, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0d, 0x73, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x53, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x6f,
	0x66, 0x74, 0x77, 0x61, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x0e, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x45,
	0x64, 0x67, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x48, 0x00, 0x52, 0x0d, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x3e, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70,
	0x63, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x45, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x31, 0x0a, 0x15, 0x47, 0x72, 0x70,
	0x63, 0x45, 0x64, 0x67, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x21, 0x0a, 0x09,
	0x47, 0x72, 0x70, 0x63, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x22,
	0x51, 0x0a, 0x16, 0x47, 0x72, 0x70, 0x63, 0x4c, 0x6f, 0x67, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x44, 0x69, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x37, 0x0a, 0x06, 0x74, 0x72, 0x61,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x66, 0x69, 0x63, 0x75,
	0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x72, 0x61, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x44, 0x69, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x06, 0x74, 0x72, 0x61, 0x63,
	0x65, 0x73, 0x22, 0x86, 0x01, 0x0a, 0x1c, 0x47, 0x72, 0x70, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x12, 0x34, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66, 0x69, 0x63, 0x75, 0x73,
	0x2e, 0x47, 0x72, 0x70, 0x63, 0x4c, 0x6f, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x65, 0x6e, 0x64,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x66,
	0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x4c, 0x6f, 0x67, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x18,
	0x47, 0x72, 0x70, 0x63, 0x54, 0x72, 0x61, 0x63, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x44, 0x69, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x07, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x66, 0x69, 0x63, 0x75,
	0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x07, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x73, 0x12, 0x48, 0x0a, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x66,
	0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x54, 0x72, 0x61, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22,
	0x3c, 0x0a, 0x0a, 0x47, 0x72, 0x70, 0x63, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x2e, 0x0a,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x66, 0x69, 0x63, 0x75, 0x73, 0x2e, 0x47, 0x72, 0x70, 0x63, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x3b, 0x0a,
	0x0f, 0x47, 0x72, 0x70, 0x63, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2a, 0x22, 0x0a, 0x0d, 0x47, 0x72,
	0x70, 0x63, 0x47, 0x72, 0x61, 0x70, 0x68, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x08, 0x0a, 0x04, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x41, 0x47, 0x10, 0x01, 0x2a, 0x75,
	0x0a, 0x10, 0x47, 0x72, 0x70, 0x63, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x69,
	0x6e, 0x64, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x61, 0x6e, 0x6f, 0x73, 0x10, 0x01, 0x12, 0x0a,
	0x0a, 0x06, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x10, 0x05,
	0x12, 0x09, 0x0a, 0x05, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x44,
	0x61, 0x79, 0x73, 0x10, 0x07, 0x2a, 0xb1, 0x01, 0x0a, 0x19, 0x47, 0x72, 0x70, 0x63, 0x55, 0x6e,
	0x64, 0x65, 0x72, 0x6c, 0x79, 0x69, 0x6e, 0x67, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x4b,
	0x69, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x69, 0x63, 0x74, 0x4c, 0x6f, 0x6f,
	0x70, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x54, 0x61, 0x6e, 0x64, 0x65, 0x6d, 0x41, 0x72, 0x72, 0x61, 0x79, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x61, 0x6c, 0x54, 0x61, 0x6e, 0x64, 0x65, 0x6d, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x4d, 0x61, 0x78, 0x69, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x10, 0x04,
	0x12, 0x1a, 0x0a, 0x16, 0x4e, 0x65, 0x61, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x61, 0x78,
	0x69, 0x6d, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x06, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x3b,
	0x67, 0x72, 0x70, 0x63, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pipelines_and_context_proto_rawDescOnce sync.Once
	file_pipelines_and_context_proto_rawDescData = file_pipelines_and_context_proto_rawDesc
)

func file_pipelines_and_context_proto_rawDescGZIP() []byte {
	file_pipelines_and_context_proto_rawDescOnce.Do(func() {
		file_pipelines_and_context_proto_rawDescData = protoimpl.X.CompressGZIP(file_pipelines_and_context_proto_rawDescData)
	})
	return file_pipelines_and_context_proto_rawDescData
}

var file_pipelines_and_context_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pipelines_and_context_proto_msgTypes = make([]protoimpl.MessageInfo, 60)
var file_pipelines_and_context_proto_goTypes = []interface{}{
	(GrpcGraphKind)(0),                              // 0: ficus.GrpcGraphKind
	(GrpcDurationKind)(0),                           // 1: ficus.GrpcDurationKind
	(GrpcUnderlyingPatternKind)(0),                  // 2: ficus.GrpcUnderlyingPatternKind
	(*GrpcContextKey)(nil),                          // 3: ficus.GrpcContextKey
	(*GrpcContextValueWithKeyName)(nil),             // 4: ficus.GrpcContextValueWithKeyName
	(*GrpcContextValue)(nil),                        // 5: ficus.GrpcContextValue
	(*GrpcFloatArray)(nil),                          // 6: ficus.GrpcFloatArray
	(*GrpcIntArray)(nil),                            // 7: ficus.GrpcIntArray
	(*GrpcUintArray)(nil),                           // 8: ficus.GrpcUintArray
	(*GrpcContextKeyValue)(nil),                     // 9: ficus.GrpcContextKeyValue
	(*GrpcHashesEventLogContextValue)(nil),          // 10: ficus.GrpcHashesEventLogContextValue
	(*GrpcNamesEventLogContextValue)(nil),           // 11: ficus.GrpcNamesEventLogContextValue
	(*GrpcEventLogTraceSubArraysContextValue)(nil),  // 12: ficus.GrpcEventLogTraceSubArraysContextValue
	(*GrpcTraceSubArray)(nil),                       // 13: ficus.GrpcTraceSubArray
	(*GrpcTraceSubArrays)(nil),                      // 14: ficus.GrpcTraceSubArrays
	(*GrpcSubArrayWithTraceIndex)(nil),              // 15: ficus.GrpcSubArrayWithTraceIndex
	(*GrpcSubArraysWithTraceIndexContextValue)(nil), // 16: ficus.GrpcSubArraysWithTraceIndexContextValue
	(*GrpcColorsEventLog)(nil),                      // 17: ficus.GrpcColorsEventLog
	(*GrpcColorsLogAdjustment)(nil),                 // 18: ficus.GrpcColorsLogAdjustment
	(*GrpcColorsLogRectangleAdjustment)(nil),        // 19: ficus.GrpcColorsLogRectangleAdjustment
	(*GrpcLogPoint)(nil),                            // 20: ficus.GrpcLogPoint
	(*GrpcColorsLogXAxisAfterTraceAdjustment)(nil),  // 21: ficus.GrpcColorsLogXAxisAfterTraceAdjustment
	(*GrpcColorsEventLogMapping)(nil),               // 22: ficus.GrpcColorsEventLogMapping
	(*GrpcColorsTrace)(nil),                         // 23: ficus.GrpcColorsTrace
	(*GrpcColoredRectangle)(nil),                    // 24: ficus.GrpcColoredRectangle
	(*GrpcEnum)(nil),                                // 25: ficus.GrpcEnum
	(*GrpcEventLogInfo)(nil),                        // 26: ficus.GrpcEventLogInfo
	(*GrpcStrings)(nil),                             // 27: ficus.GrpcStrings
	(*GrpcPipeline)(nil),                            // 28: ficus.GrpcPipeline
	(*GrpcPipelinePartBase)(nil),                    // 29: ficus.GrpcPipelinePartBase
	(*GrpcPipelinePart)(nil),                        // 30: ficus.GrpcPipelinePart
	(*GrpcPipelinePartConfiguration)(nil),           // 31: ficus.GrpcPipelinePartConfiguration
	(*GrpcParallelPipelinePart)(nil),                // 32: ficus.GrpcParallelPipelinePart
	(*GrpcParallelPipelineParts)(nil),               // 33: ficus.GrpcParallelPipelineParts
	(*GrpcSimpleContextRequestPipelinePart)(nil),    // 34: ficus.GrpcSimpleContextRequestPipelinePart
	(*GrpcComplexContextRequestPipelinePart)(nil),   // 35: ficus.GrpcComplexContextRequestPipelinePart
	(*GrpcGraph)(nil),                               // 36: ficus.GrpcGraph
	(*GrpcGraphNode)(nil),                           // 37: ficus.GrpcGraphNode
	(*GrpcNodeAdditionalData)(nil),                  // 38: ficus.GrpcNodeAdditionalData
	(*GrpcMultithreadedFragment)(nil),               // 39: ficus.GrpcMultithreadedFragment
	(*GrpcActivityStartEndData)(nil),                // 40: ficus.GrpcActivityStartEndData
	(*GrpcEventCoordinates)(nil),                    // 41: ficus.GrpcEventCoordinates
	(*GrpcNodeCorrespondingTraceData)(nil),          // 42: ficus.GrpcNodeCorrespondingTraceData
	(*GrpcSoftwareData)(nil),                        // 43: ficus.GrpcSoftwareData
	(*GrpcActivityDurationData)(nil),                // 44: ficus.GrpcActivityDurationData
	(*GrpcGenericEnhancementBase)(nil),              // 45: ficus.GrpcGenericEnhancementBase
	(*GrpcGeneralHistogramData)(nil),                // 46: ficus.GrpcGeneralHistogramData
	(*GrpcSimpleCounterData)(nil),                   // 47: ficus.GrpcSimpleCounterData
	(*GrpcMethodInliningInfo)(nil),                  // 48: ficus.GrpcMethodInliningInfo
	(*GrpcMethodNameParts)(nil),                     // 49: ficus.GrpcMethodNameParts
	(*GrpcHistogramEntry)(nil),                      // 50: ficus.GrpcHistogramEntry
	(*GrpcTimelineDiagramFragment)(nil),             // 51: ficus.GrpcTimelineDiagramFragment
	(*GrpcAllocationInfo)(nil),                      // 52: ficus.GrpcAllocationInfo
	(*GrpcUnderlyingPatternInfo)(nil),               // 53: ficus.GrpcUnderlyingPatternInfo
	(*GrpcGraphEdge)(nil),                           // 54: ficus.GrpcGraphEdge
	(*GrpcGraphEdgeAdditionalData)(nil),             // 55: ficus.GrpcGraphEdgeAdditionalData
	(*GrpcEdgeExecutionInfo)(nil),                   // 56: ficus.GrpcEdgeExecutionInfo
	(*GrpcBytes)(nil),                               // 57: ficus.GrpcBytes
	(*GrpcLogTimelineDiagram)(nil),                  // 58: ficus.GrpcLogTimelineDiagram
	(*GrpcTimelineTraceEventsGroup)(nil),            // 59: ficus.GrpcTimelineTraceEventsGroup
	(*GrpcTraceTimelineDiagram)(nil),                // 60: ficus.GrpcTraceTimelineDiagram
	(*GrpcThread)(nil),                              // 61: ficus.GrpcThread
	(*GrpcThreadEvent)(nil),                         // 62: ficus.GrpcThreadEvent
	(*GrpcPetriNet)(nil),                            // 63: ficus.GrpcPetriNet
	(*GrpcAnnotation)(nil),                          // 64: ficus.GrpcAnnotation
	(*GrpcDataset)(nil),                             // 65: ficus.GrpcDataset
	(*GrpcLabeledDataset)(nil),                      // 66: ficus.GrpcLabeledDataset
	(*GrpcHashesEventLog)(nil),                      // 67: ficus.GrpcHashesEventLog
	(*GrpcNamesEventLog)(nil),                       // 68: ficus.GrpcNamesEventLog
	(*GrpcColor)(nil),                               // 69: ficus.GrpcColor
	(*GrpcUuid)(nil),                                // 70: ficus.GrpcUuid
	(*emptypb.Empty)(nil),                           // 71: google.protobuf.Empty
	(*GrpcSimpleEventLog)(nil),                      // 72: ficus.GrpcSimpleEventLog
}
var file_pipelines_and_context_proto_depIdxs = []int32{
	5,  // 0: ficus.GrpcContextValueWithKeyName.value:type_name -> ficus.GrpcContextValue
	10, // 1: ficus.GrpcContextValue.hashes_log:type_name -> ficus.GrpcHashesEventLogContextValue
	11, // 2: ficus.GrpcContextValue.names_log:type_name -> ficus.GrpcNamesEventLogContextValue
	12, // 3: ficus.GrpcContextValue.traces_sub_arrays:type_name -> ficus.GrpcEventLogTraceSubArraysContextValue
	16, // 4: ficus.GrpcContextValue.trace_index_sub_arrays:type_name -> ficus.GrpcSubArraysWithTraceIndexContextValue
	11, // 5: ficus.GrpcContextValue.xes_event_log:type_name -> ficus.GrpcNamesEventLogContextValue
	17, // 6: ficus.GrpcContextValue.colors_log:type_name -> ficus.GrpcColorsEventLog
	25, // 7: ficus.GrpcContextValue.enum:type_name -> ficus.GrpcEnum
	26, // 8: ficus.GrpcContextValue.event_log_info:type_name -> ficus.GrpcEventLogInfo
	27, // 9: ficus.GrpcContextValue.strings:type_name -> ficus.GrpcStrings
	28, // 10: ficus.GrpcContextValue.pipeline:type_name -> ficus.GrpcPipeline
	63, // 11: ficus.GrpcContextValue.petriNet:type_name -> ficus.GrpcPetriNet
	36, // 12: ficus.GrpcContextValue.graph:type_name -> ficus.GrpcGraph
	64, // 13: ficus.GrpcContextValue.annotation:type_name -> ficus.GrpcAnnotation
	65, // 14: ficus.GrpcContextValue.dataset:type_name -> ficus.GrpcDataset
	66, // 15: ficus.GrpcContextValue.labeled_dataset:type_name -> ficus.GrpcLabeledDataset
	57, // 16: ficus.GrpcContextValue.bytes:type_name -> ficus.GrpcBytes
	58, // 17: ficus.GrpcContextValue.logTimelineDiagram:type_name -> ficus.GrpcLogTimelineDiagram
	6,  // 18: ficus.GrpcContextValue.float_array:type_name -> ficus.GrpcFloatArray
	7,  // 19: ficus.GrpcContextValue.int_array:type_name -> ficus.GrpcIntArray
	8,  // 20: ficus.GrpcContextValue.uint_array:type_name -> ficus.GrpcUintArray
	3,  // 21: ficus.GrpcContextKeyValue.key:type_name -> ficus.GrpcContextKey
	5,  // 22: ficus.GrpcContextKeyValue.value:type_name -> ficus.GrpcContextValue
	67, // 23: ficus.GrpcHashesEventLogContextValue.log:type_name -> ficus.GrpcHashesEventLog
	68, // 24: ficus.GrpcNamesEventLogContextValue.log:type_name -> ficus.GrpcNamesEventLog
	14, // 25: ficus.GrpcEventLogTraceSubArraysContextValue.traces_sub_arrays:type_name -> ficus.GrpcTraceSubArrays
	13, // 26: ficus.GrpcTraceSubArrays.sub_arrays:type_name -> ficus.GrpcTraceSubArray
	13, // 27: ficus.GrpcSubArrayWithTraceIndex.sub_array:type_name -> ficus.GrpcTraceSubArray
	15, // 28: ficus.GrpcSubArraysWithTraceIndexContextValue.sub_arrays:type_name -> ficus.GrpcSubArrayWithTraceIndex
	22, // 29: ficus.GrpcColorsEventLog.mapping:type_name -> ficus.GrpcColorsEventLogMapping
	23, // 30: ficus.GrpcColorsEventLog.traces:type_name -> ficus.GrpcColorsTrace
	18, // 31: ficus.GrpcColorsEventLog.adjustments:type_name -> ficus.GrpcColorsLogAdjustment
	19, // 32: ficus.GrpcColorsLogAdjustment.rectangle_adjustment:type_name -> ficus.GrpcColorsLogRectangleAdjustment
	21, // 33: ficus.GrpcColorsLogAdjustment.axis_after_trace:type_name -> ficus.GrpcColorsLogXAxisAfterTraceAdjustment
	20, // 34: ficus.GrpcColorsLogRectangleAdjustment.up_left_point:type_name -> ficus.GrpcLogPoint
	20, // 35: ficus.GrpcColorsLogRectangleAdjustment.down_right_point:type_name -> ficus.GrpcLogPoint
	69, // 36: ficus.GrpcColorsEventLogMapping.color:type_name -> ficus.GrpcColor
	24, // 37: ficus.GrpcColorsTrace.event_colors:type_name -> ficus.GrpcColoredRectangle
	29, // 38: ficus.GrpcPipeline.parts:type_name -> ficus.GrpcPipelinePartBase
	30, // 39: ficus.GrpcPipelinePartBase.defaultPart:type_name -> ficus.GrpcPipelinePart
	32, // 40: ficus.GrpcPipelinePartBase.parallelPart:type_name -> ficus.GrpcParallelPipelinePart
	34, // 41: ficus.GrpcPipelinePartBase.simpleContextRequestPart:type_name -> ficus.GrpcSimpleContextRequestPipelinePart
	35, // 42: ficus.GrpcPipelinePartBase.complexContextRequestPart:type_name -> ficus.GrpcComplexContextRequestPipelinePart
	31, // 43: ficus.GrpcPipelinePart.configuration:type_name -> ficus.GrpcPipelinePartConfiguration
	9,  // 44: ficus.GrpcPipelinePartConfiguration.configurationParameters:type_name -> ficus.GrpcContextKeyValue
	29, // 45: ficus.GrpcParallelPipelinePart.pipelineParts:type_name -> ficus.GrpcPipelinePartBase
	32, // 46: ficus.GrpcParallelPipelineParts.pipeline:type_name -> ficus.GrpcParallelPipelinePart
	3,  // 47: ficus.GrpcSimpleContextRequestPipelinePart.key:type_name -> ficus.GrpcContextKey
	70, // 48: ficus.GrpcSimpleContextRequestPipelinePart.frontendPartUuid:type_name -> ficus.GrpcUuid
	3,  // 49: ficus.GrpcComplexContextRequestPipelinePart.keys:type_name -> ficus.GrpcContextKey
	30, // 50: ficus.GrpcComplexContextRequestPipelinePart.beforePipelinePart:type_name -> ficus.GrpcPipelinePart
	70, // 51: ficus.GrpcComplexContextRequestPipelinePart.frontendPartUuid:type_name -> ficus.GrpcUuid
	37, // 52: ficus.GrpcGraph.nodes:type_name -> ficus.GrpcGraphNode
	54, // 53: ficus.GrpcGraph.edges:type_name -> ficus.GrpcGraphEdge
	0,  // 54: ficus.GrpcGraph.kind:type_name -> ficus.GrpcGraphKind
	38, // 55: ficus.GrpcGraphNode.additional_data:type_name -> ficus.GrpcNodeAdditionalData
	36, // 56: ficus.GrpcGraphNode.inner_graph:type_name -> ficus.GrpcGraph
	71, // 57: ficus.GrpcNodeAdditionalData.none:type_name -> google.protobuf.Empty
	43, // 58: ficus.GrpcNodeAdditionalData.software_data:type_name -> ficus.GrpcSoftwareData
	53, // 59: ficus.GrpcNodeAdditionalData.pattern_info:type_name -> ficus.GrpcUnderlyingPatternInfo
	42, // 60: ficus.GrpcNodeAdditionalData.trace_data:type_name -> ficus.GrpcNodeCorrespondingTraceData
	40, // 61: ficus.GrpcNodeAdditionalData.time_data:type_name -> ficus.GrpcActivityStartEndData
	39, // 62: ficus.GrpcNodeAdditionalData.multithreaded_fragment:type_name -> ficus.GrpcMultithreadedFragment
	41, // 63: ficus.GrpcNodeAdditionalData.original_event_coordinates:type_name -> ficus.GrpcEventCoordinates
	72, // 64: ficus.GrpcMultithreadedFragment.multithreaded_log:type_name -> ficus.GrpcSimpleEventLog
	50, // 65: ficus.GrpcSoftwareData.histogram:type_name -> ficus.GrpcHistogramEntry
	51, // 66: ficus.GrpcSoftwareData.timeline_diagram_fragment:type_name -> ficus.GrpcTimelineDiagramFragment
	46, // 67: ficus.GrpcSoftwareData.histogram_data:type_name -> ficus.GrpcGeneralHistogramData
	47, // 68: ficus.GrpcSoftwareData.simple_counter_data:type_name -> ficus.GrpcSimpleCounterData
	44, // 69: ficus.GrpcSoftwareData.activities_durations_data:type_name -> ficus.GrpcActivityDurationData
	45, // 70: ficus.GrpcActivityDurationData.base:type_name -> ficus.GrpcGenericEnhancementBase
	1,  // 71: ficus.GrpcActivityDurationData.kind:type_name -> ficus.GrpcDurationKind
	45, // 72: ficus.GrpcGeneralHistogramData.base:type_name -> ficus.GrpcGenericEnhancementBase
	50, // 73: ficus.GrpcGeneralHistogramData.entries:type_name -> ficus.GrpcHistogramEntry
	45, // 74: ficus.GrpcSimpleCounterData.base:type_name -> ficus.GrpcGenericEnhancementBase
	49, // 75: ficus.GrpcMethodInliningInfo.inlinee_info:type_name -> ficus.GrpcMethodNameParts
	49, // 76: ficus.GrpcMethodInliningInfo.inliner_info:type_name -> ficus.GrpcMethodNameParts
	61, // 77: ficus.GrpcTimelineDiagramFragment.threads:type_name -> ficus.GrpcThread
	2,  // 78: ficus.GrpcUnderlyingPatternInfo.pattern_kind:type_name -> ficus.GrpcUnderlyingPatternKind
	36, // 79: ficus.GrpcUnderlyingPatternInfo.graph:type_name -> ficus.GrpcGraph
	55, // 80: ficus.GrpcGraphEdge.additional_data:type_name -> ficus.GrpcGraphEdgeAdditionalData
	43, // 81: ficus.GrpcGraphEdgeAdditionalData.software_data:type_name -> ficus.GrpcSoftwareData
	56, // 82: ficus.GrpcGraphEdgeAdditionalData.execution_info:type_name -> ficus.GrpcEdgeExecutionInfo
	40, // 83: ficus.GrpcGraphEdgeAdditionalData.time_data:type_name -> ficus.GrpcActivityStartEndData
	60, // 84: ficus.GrpcLogTimelineDiagram.traces:type_name -> ficus.GrpcTraceTimelineDiagram
	20, // 85: ficus.GrpcTimelineTraceEventsGroup.start_point:type_name -> ficus.GrpcLogPoint
	20, // 86: ficus.GrpcTimelineTraceEventsGroup.end_point:type_name -> ficus.GrpcLogPoint
	61, // 87: ficus.GrpcTraceTimelineDiagram.threads:type_name -> ficus.GrpcThread
	59, // 88: ficus.GrpcTraceTimelineDiagram.events_groups:type_name -> ficus.GrpcTimelineTraceEventsGroup
	62, // 89: ficus.GrpcThread.events:type_name -> ficus.GrpcThreadEvent
	90, // [90:90] is the sub-list for method output_type
	90, // [90:90] is the sub-list for method input_type
	90, // [90:90] is the sub-list for extension type_name
	90, // [90:90] is the sub-list for extension extendee
	0,  // [0:90] is the sub-list for field type_name
}

func init() { file_pipelines_and_context_proto_init() }
func file_pipelines_and_context_proto_init() {
	if File_pipelines_and_context_proto != nil {
		return
	}
	file_pm_models_proto_init()
	file_util_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pipelines_and_context_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcContextKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcContextValueWithKeyName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcContextValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcFloatArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcIntArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcUintArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcContextKeyValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcHashesEventLogContextValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcNamesEventLogContextValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcEventLogTraceSubArraysContextValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcTraceSubArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcTraceSubArrays); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcSubArrayWithTraceIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcSubArraysWithTraceIndexContextValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcColorsEventLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcColorsLogAdjustment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcColorsLogRectangleAdjustment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcLogPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcColorsLogXAxisAfterTraceAdjustment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcColorsEventLogMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcColorsTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcColoredRectangle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcEventLogInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcStrings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcPipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcPipelinePartBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcPipelinePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcPipelinePartConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcParallelPipelinePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcParallelPipelineParts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcSimpleContextRequestPipelinePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcComplexContextRequestPipelinePart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcGraph); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcGraphNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcNodeAdditionalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcMultithreadedFragment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcActivityStartEndData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcEventCoordinates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcNodeCorrespondingTraceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcSoftwareData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcActivityDurationData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcGenericEnhancementBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcGeneralHistogramData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcSimpleCounterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcMethodInliningInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcMethodNameParts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcHistogramEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcTimelineDiagramFragment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcAllocationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcUnderlyingPatternInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcGraphEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcGraphEdgeAdditionalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcEdgeExecutionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcBytes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcLogTimelineDiagram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcTimelineTraceEventsGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcTraceTimelineDiagram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcThread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pipelines_and_context_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrpcThreadEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pipelines_and_context_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*GrpcContextValue_String_)(nil),
		(*GrpcContextValue_HashesLog)(nil),
		(*GrpcContextValue_NamesLog)(nil),
		(*GrpcContextValue_Uint32)(nil),
		(*GrpcContextValue_TracesSubArrays)(nil),
		(*GrpcContextValue_TraceIndexSubArrays)(nil),
		(*GrpcContextValue_Bool)(nil),
		(*GrpcContextValue_XesEventLog)(nil),
		(*GrpcContextValue_ColorsLog)(nil),
		(*GrpcContextValue_Enum)(nil),
		(*GrpcContextValue_EventLogInfo)(nil),
		(*GrpcContextValue_Strings)(nil),
		(*GrpcContextValue_Pipeline)(nil),
		(*GrpcContextValue_PetriNet)(nil),
		(*GrpcContextValue_Graph)(nil),
		(*GrpcContextValue_Float)(nil),
		(*GrpcContextValue_Annotation)(nil),
		(*GrpcContextValue_Dataset)(nil),
		(*GrpcContextValue_LabeledDataset)(nil),
		(*GrpcContextValue_Bytes)(nil),
		(*GrpcContextValue_LogTimelineDiagram)(nil),
		(*GrpcContextValue_FloatArray)(nil),
		(*GrpcContextValue_IntArray)(nil),
		(*GrpcContextValue_UintArray)(nil),
		(*GrpcContextValue_Json)(nil),
	}
	file_pipelines_and_context_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*GrpcColorsLogAdjustment_RectangleAdjustment)(nil),
		(*GrpcColorsLogAdjustment_AxisAfterTrace)(nil),
	}
	file_pipelines_and_context_proto_msgTypes[26].OneofWrappers = []interface{}{
		(*GrpcPipelinePartBase_DefaultPart)(nil),
		(*GrpcPipelinePartBase_ParallelPart)(nil),
		(*GrpcPipelinePartBase_SimpleContextRequestPart)(nil),
		(*GrpcPipelinePartBase_ComplexContextRequestPart)(nil),
	}
	file_pipelines_and_context_proto_msgTypes[35].OneofWrappers = []interface{}{
		(*GrpcNodeAdditionalData_None)(nil),
		(*GrpcNodeAdditionalData_SoftwareData)(nil),
		(*GrpcNodeAdditionalData_PatternInfo)(nil),
		(*GrpcNodeAdditionalData_TraceData)(nil),
		(*GrpcNodeAdditionalData_TimeData)(nil),
		(*GrpcNodeAdditionalData_MultithreadedFragment)(nil),
	}
	file_pipelines_and_context_proto_msgTypes[42].OneofWrappers = []interface{}{}
	file_pipelines_and_context_proto_msgTypes[52].OneofWrappers = []interface{}{
		(*GrpcGraphEdgeAdditionalData_SoftwareData)(nil),
		(*GrpcGraphEdgeAdditionalData_ExecutionInfo)(nil),
		(*GrpcGraphEdgeAdditionalData_TimeData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pipelines_and_context_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   60,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pipelines_and_context_proto_goTypes,
		DependencyIndexes: file_pipelines_and_context_proto_depIdxs,
		EnumInfos:         file_pipelines_and_context_proto_enumTypes,
		MessageInfos:      file_pipelines_and_context_proto_msgTypes,
	}.Build()
	File_pipelines_and_context_proto = out.File
	file_pipelines_and_context_proto_rawDesc = nil
	file_pipelines_and_context_proto_goTypes = nil
	file_pipelines_and_context_proto_depIdxs = nil
}
