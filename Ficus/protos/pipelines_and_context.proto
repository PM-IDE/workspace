syntax = "proto3";

package ficus;

import "pm_models.proto";
import "util.proto";
import "google/protobuf/empty.proto";

message GrpcContextKey {
  string name = 1;
}

message GrpcContextValueWithKeyName {
  string key_name = 1;
  GrpcContextValue value = 2;
}

message GrpcContextValue {
  oneof contextValue {
    string string = 1;
    GrpcHashesEventLogContextValue hashes_log = 2;
    GrpcNamesEventLogContextValue names_log = 3;
    uint32 uint32 = 4;
    GrpcEventLogTraceSubArraysContextValue traces_sub_arrays = 5;
    GrpcSubArraysWithTraceIndexContextValue trace_index_sub_arrays = 6;
    bool bool = 7;
    GrpcNamesEventLogContextValue xes_event_log = 8;
    GrpcColorsEventLog colors_log = 9;
    GrpcEnum enum = 10;
    GrpcEventLogInfo event_log_info = 11;
    GrpcStrings strings = 12;
    GrpcPipeline pipeline = 13;
    GrpcPetriNet petriNet = 14;
    GrpcGraph graph = 15;
    float float = 16;
    GrpcAnnotation annotation = 17;
    GrpcDataset dataset = 18;
    GrpcLabeledDataset labeled_dataset = 19;
    GrpcBytes bytes = 20;
    GrpcLogTimelineDiagram logTimelineDiagram = 21;
    GrpcFloatArray float_array = 22;
    GrpcIntArray int_array = 23;
    GrpcUintArray uint_array = 24;
  }
}

message GrpcFloatArray {
  repeated double items = 1;
}

message GrpcIntArray {
  repeated int64 items = 1;
}

message GrpcUintArray {
  repeated uint64 items = 1;
}

message GrpcContextKeyValue {
  GrpcContextKey key = 1;
  GrpcContextValue value = 2;
}

message GrpcHashesEventLogContextValue {
  GrpcHashesEventLog log = 1;
}

message GrpcNamesEventLogContextValue {
  GrpcNamesEventLog log = 1;
}

message GrpcEventLogTraceSubArraysContextValue {
  repeated GrpcTraceSubArrays traces_sub_arrays = 1;
}

message GrpcTraceSubArray {
  uint32 start = 1;
  uint32 end = 2;
}

message GrpcTraceSubArrays {
  repeated GrpcTraceSubArray sub_arrays = 1;
}

message GrpcSubArrayWithTraceIndex {
  GrpcTraceSubArray sub_array = 1;
  uint32 trace_index = 2;
}

message GrpcSubArraysWithTraceIndexContextValue {
  repeated GrpcSubArrayWithTraceIndex sub_arrays = 1;
}

message GrpcColorsEventLog {
  repeated GrpcColorsEventLogMapping mapping = 1;
  repeated GrpcColorsTrace traces = 2;
  repeated GrpcColorsLogAdjustment adjustments = 3;
}

message GrpcColorsLogAdjustment {
  oneof selection {
    GrpcColorsLogRectangleAdjustment rectangle_adjustment = 1;
    GrpcColorsLogXAxisAfterTraceAdjustment axis_after_trace = 2;
  }
}

message GrpcColorsLogRectangleAdjustment {
  GrpcLogPoint up_left_point = 1;
  GrpcLogPoint down_right_point = 2;
  bool extend_to_nearest_vertical_borders = 3;
}

message GrpcLogPoint {
  uint64 trace_index = 1;
  uint64 event_index = 2;
}

message GrpcColorsLogXAxisAfterTraceAdjustment {
  uint64 trace_index = 1;
}

message GrpcColorsEventLogMapping {
  string name = 1;
  GrpcColor color = 2;
}

message GrpcColorsTrace {
  repeated GrpcColoredRectangle event_colors = 1;
  bool constant_width = 2;
}

message GrpcColoredRectangle {
  uint32 color_index = 1;
  double start_x = 2;
  double length = 3;
}

message GrpcEnum {
  string enumType = 1;
  string value = 2;
}

message GrpcEventLogInfo {
  uint32 events_count = 1;
  uint32 traces_count = 2;
  uint32 event_classes_count = 3;
}

message GrpcStrings {
  repeated string strings = 1;
}


message GrpcPipeline {
  repeated GrpcPipelinePartBase parts = 1;
}

message GrpcPipelinePartBase {
  oneof part {
    GrpcPipelinePart defaultPart = 1;
    GrpcParallelPipelinePart parallelPart = 2;
    GrpcSimpleContextRequestPipelinePart simpleContextRequestPart = 3;
    GrpcComplexContextRequestPipelinePart complexContextRequestPart = 4;
  }
}

message GrpcPipelinePart {
  string name = 1;
  GrpcPipelinePartConfiguration configuration = 2;
}

message GrpcPipelinePartConfiguration {
  repeated GrpcContextKeyValue configurationParameters = 1;
}

message GrpcParallelPipelinePart {
  repeated GrpcPipelinePartBase pipelineParts = 1;
}

message GrpcParallelPipelineParts {
  repeated GrpcParallelPipelinePart pipeline = 1;
}

message GrpcSimpleContextRequestPipelinePart {
  GrpcContextKey key = 1;
  GrpcUuid frontendPartUuid = 2;
  string frontendPipelinePartName = 3;
}

message GrpcComplexContextRequestPipelinePart {
  repeated GrpcContextKey keys = 1;
  GrpcPipelinePart beforePipelinePart = 2;
  GrpcUuid frontendPartUuid = 3;
  string frontendPipelinePartName = 4;
}

message GrpcGraph {
  repeated GrpcGraphNode nodes = 1;
  repeated GrpcGraphEdge edges = 2;
}

message GrpcGraphNode {
  uint64 id = 1;
  string data = 2;
  repeated GrpcNodeAdditionalData additional_data = 3;
  GrpcGraph inner_graph = 4;
}

message GrpcNodeAdditionalData {
  oneof data {
    google.protobuf.Empty none = 1;
    GrpcSoftwareData software_data = 2;
    GrpcUnderlyingPatternInfo pattern_info = 3;
    GrpcNodeCorrespondingTraceData trace_data = 4;
    GrpcActivityStartEndData time_data = 5;
  }

  //we need to understand from where the node data came from the original event log
  GrpcEventCoordinates original_event_coordinates = 6;
}

message GrpcActivityStartEndData {
  uint64 start_time = 1;
  uint64 end_time = 2;
}

message GrpcEventCoordinates {
  uint64 trace_id = 2;
  uint64 event_index = 3;
}

message GrpcNodeCorrespondingTraceData {
  bool belongs_to_root_sequence = 1;
}

message GrpcSoftwareData {
  repeated GrpcHistogramEntry histogram = 1;
  GrpcTimelineDiagramFragment timeline_diagram_fragment = 2;
  
  repeated GrpcAllocationInfo allocations_info = 3;
  repeated GrpcExecutionSuspensionInfo execution_suspension_info = 4;
  repeated GrpcThreadEventInfo thread_events = 5;
  repeated GrpcMethodInliningEvent methods_inlining_events = 6;
  repeated GrpcArrayPoolEvent array_pool_events = 7;
  repeated GrpcExceptionEvent exception_events = 8;
  repeated GrpcHTTPEvent http_events = 9;
  repeated GrpcContentionEvent contention_events = 10;
  repeated GrpcSocketEvent socket_event = 11;
}

message GrpcExecutionSuspensionInfo {
  string reason = 1;
  uint64 start_time = 2;
  uint64 end_time = 3;
}

message GrpcMethodInliningEvent {
  string method_name = 1;
  
  oneof event {
    google.protobuf.Empty succeeded = 2;
    GrpcMethodInliningFailedEvent failed = 3;
  }
}

message GrpcMethodInliningFailedEvent {
  string reason = 1;
}

enum GrpcThreadEventKind {
  Created = 0;
  Terminated = 1;
}

message GrpcThreadEventInfo {
  uint64 thread_id = 1;
  GrpcThreadEventKind event_kind = 2;
}

enum GrpcAssemblyEventKind {
  Loaded = 0;
  Unloaded = 1;
}

message GrpcAssemblyEventInfo {
  string assembly_name = 1;
  GrpcAssemblyEventKind event_kind = 2;
}

enum GrpcArrayPoolEventKind {
  Allocated = 0;
  Rented = 1;
  Returned = 2;
  Trimmed = 3;
}

message GrpcArrayPoolEvent {
  uint64 buffer_id = 1;
  GrpcArrayPoolEventKind event_kind = 2;
}

message GrpcExceptionEvent {
  string exception_type = 1;
}

message GrpcHTTPEvent {
  string host = 1;
  string port = 2;
  string scheme = 3;
  string path = 4;
  string query = 5;
}

message GrpcContentionEvent {
  uint64 start_time = 1;
  uint64 end_time = 2;
}

message GrpcSocketEvent {
  string address = 1;
}

message GrpcHistogramEntry {
  string name = 1;
  uint64 count = 2;
}

message GrpcTimelineDiagramFragment {
  repeated GrpcThread threads = 1;
}

message GrpcAllocationInfo {
  string type_name = 1;
  uint64 allocated_objects_count = 2;
  uint64 allocated_bytes = 3;
}

enum GrpcUnderlyingPatternKind {
  StrictLoop = 0;
  PrimitiveTandemArray = 1;
  MaximalTandemArray = 2;
  MaximalRepeat = 3;
  SuperMaximalRepeat = 4;
  NearSuperMaximalRepeat = 5;
  Unknown = 6;
}

message GrpcUnderlyingPatternInfo {
  GrpcUnderlyingPatternKind pattern_kind = 1;
  repeated string base_sequence = 2;
  GrpcGraph graph = 3;
}

message GrpcGraphEdge {
  uint64 id = 1;
  uint64 from_node = 2;
  uint64 to_node = 3;
  double weight = 4;
  string data = 5;

  repeated GrpcGraphEdgeAdditionalData additional_data = 6;
}

message GrpcGraphEdgeAdditionalData {
  oneof data {
    GrpcSoftwareData software_data = 1;
    GrpcEdgeExecutionInfo execution_info = 2;
    GrpcActivityStartEndData time_data = 3;
  }
}

message GrpcEdgeExecutionInfo {
  uint64 traceId = 1;
}

message GrpcBytes {
  bytes bytes = 1;
}

message GrpcLogTimelineDiagram {
  repeated GrpcTraceTimelineDiagram traces = 1;
}

message GrpcTimelineTraceEventsGroup {
  GrpcLogPoint start_point = 1;
  GrpcLogPoint end_point = 2;
}

message GrpcTraceTimelineDiagram {
  repeated GrpcThread threads = 1;
  repeated GrpcTimelineTraceEventsGroup events_groups = 2;
}

message GrpcThread {
  repeated GrpcThreadEvent events = 1;
}

message GrpcThreadEvent {
  string name = 1;
  uint64 stamp = 2;
}